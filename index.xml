<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>@hyperdbg - Telegram group archive</title>
    <link>https://tg-archive.hyperdbg.org</link>
    <description>Public archive of HyperDbg Telegram messages.</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>tg-archive 1.3.0</generator>
    <lastBuildDate>Sat, 26 Jul 2025 00:13:55 +0000</lastBuildDate>
    <item>
      <title>@HughEverett on 2025-07-24 14:07:48+00:00 (#10346)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10346</link>
      <description>Hey,
Just to clarify, I'm not working in the anti-cheat area myself. Also, this group is focused on HyperDbg and hypervisor-related topics. Let's try to keep the discussions on-topic to benefit everyone here. Appreciate your understanding!</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10346</guid>
      <pubDate>Thu, 24 Jul 2025 14:07:48 +0000</pubDate>
    </item>
    <item>
      <title>@6595241063 on 2025-07-24 13:28:48+00:00 (#10345)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10345</link>
      <description>@HughEverett boss</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10345</guid>
      <pubDate>Thu, 24 Jul 2025 13:28:48 +0000</pubDate>
    </item>
    <item>
      <title>@6595241063 on 2025-07-24 13:26:59+00:00 (#10344)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10344</link>
      <description>Is there a blog or example of hyper-V bypassing anti-cheat detection?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10344</guid>
      <pubDate>Thu, 24 Jul 2025 13:26:59 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 23:00:04+00:00 (#10343)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10343</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: yeah, the best case scenario is a crash. worst case, it works.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10343</guid>
      <pubDate>Wed, 23 Jul 2025 23:00:04 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 22:54:04+00:00 (#10342)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10342</link>
      <description>This bug actually reminded me that I had the same bug once. I assumed that home space is only used for saving function parameters and I could skip it for a small function that doesn't even touch memory. I was wrong, optimizing compiler uses home space however it wants. And the corruption was wild - I was lucky to corrupt the local APIC ID field of a neighbour virtual CPU, which was supposed to be a read only field.. Pheww</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10342</guid>
      <pubDate>Wed, 23 Jul 2025 22:54:04 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 22:49:10+00:00 (#10341)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10341</link>
      <description>There are not that much assembly codes in HyperDbg. Specially, in user mode, I think we only have one or two. 🤔</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10341</guid>
      <pubDate>Wed, 23 Jul 2025 22:49:10 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 22:48:21+00:00 (#10340)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10340</link>
      <description>Sure. I'll check it too. It would be best if you could check other assembly codes as well, so we both go through it and hopefully we won't miss anything together.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10340</guid>
      <pubDate>Wed, 23 Jul 2025 22:48:21 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 22:46:48+00:00 (#10339)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10339</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: Yep ill take a look at this but this is a good opportunity to go over all the hand written assembly just to make sure its not silently happening anywhere else and working by chance.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10339</guid>
      <pubDate>Wed, 23 Jul 2025 22:46:48 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 22:46:04+00:00 (#10338)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10338</link>
      <description>I promise I won't fix it before you again (like last time). 😜</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10338</guid>
      <pubDate>Wed, 23 Jul 2025 22:46:04 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 22:45:04+00:00 (#10337)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10337</link>
      <description>I think it's just one function that we wrote here in assembly, but since you spent a bit of time debugging it, it's probably better you fix it.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10337</guid>
      <pubDate>Wed, 23 Jul 2025 22:45:04 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 22:44:08+00:00 (#10336)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10336</link>
      <description>Oh, great. It would be best if you could send a PR to fix it too.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10336</guid>
      <pubDate>Wed, 23 Jul 2025 22:44:08 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 22:43:02+00:00 (#10335)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10335</link>
      <description>[discord] &lt;unrustled.jimmies&gt; using x64dbg to debug hyperdbg 🙂</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10335</guid>
      <pubDate>Wed, 23 Jul 2025 22:43:02 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 22:41:31+00:00 (#10334)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10334</link>
      <description>[discord] &lt;honorary_bot&gt; Nice catch man. Yeah, handcrafted assembly does require home space at least.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10334</guid>
      <pubDate>Wed, 23 Jul 2025 22:41:31 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 22:39:55+00:00 (#10333)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10333</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: Doesn't look like its a bug in msvc. In the optimized build, rbx is getting clobbered out of band with the AsmVmxSupportDetection  call it looks like but msvc still thinks its 0 at the point of comparison so it uses that to cmp device with 0x0. In the unoptimized build, its comparing the memory location to 0x0 directly. 

for all of your custom written assembly, make sure you either write it like a real function with the prologue or epilogue manually or at least save/restore the non volatile registers (in this case it was tricky since rbx was getting clobbered by cpuid behind the scenes).
https://cdn.discordapp.com/attachments/962350355839066130/1397709841673486446/Screenshot_2025-07-23_141845.png?ex=6882b63a&amp;is=688164ba&amp;hm=6fd18571cdc714852ec775e8a7b084fe591c553733294045034e39a7fdebfc14&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709842088591393/Screenshot_2025-07-23_142605.png?ex=6882b63a&amp;is=688164ba&amp;hm=199b4eb5763c1a20e9ca804161982e086ec5598d9732d2d52861229ceb5680aa&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709842520477767/before.png?ex=6882b63a&amp;is=688164ba&amp;hm=5834ba09daa7f16941a707857946c660903804f03edca4e2519aa5d70782da8a&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709843045027841/after.png?ex=6882b63a&amp;is=688164ba&amp;hm=ff2e04472cdce7f3a59035eb441eb0082c498a1a51c2a99512f7b1770df79398&amp;</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10333</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://cdn.discordapp.com/attachments/962350355839066130/1397709841673486446/Screenshot_2025-07-23_141845.png?ex=6882b63a&amp;is=688164ba&amp;hm=6fd18571cdc714852ec775e8a7b084fe591c553733294045034e39a7fdebfc14&amp;" length="0" type="text/html"/>
      <pubDate>Wed, 23 Jul 2025 22:39:55 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:15:05+00:00 (#10332)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10332</link>
      <description>Great. I'll test it and if it finds anything I'll let you know.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10332</guid>
      <pubDate>Wed, 23 Jul 2025 19:15:05 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:14:22+00:00 (#10331)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10331</link>
      <description>Yeah, sort of. It just depends on a heap allocator being used</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10331</guid>
      <pubDate>Wed, 23 Jul 2025 19:14:22 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:14:00+00:00 (#10330)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10330</link>
      <description>Application verifier is an alternative to the driver verifier in user mode?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10330</guid>
      <pubDate>Wed, 23 Jul 2025 19:14:00 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:13:20+00:00 (#10329)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10329</link>
      <description>But worth a try anyway</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10329</guid>
      <pubDate>Wed, 23 Jul 2025 19:13:20 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:13:06+00:00 (#10328)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10328</link>
      <description>Not sure if application verifier helps here</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10328</guid>
      <pubDate>Wed, 23 Jul 2025 19:13:06 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:12:55+00:00 (#10327)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10327</link>
      <description>Oh, sorry, I missed that</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10327</guid>
      <pubDate>Wed, 23 Jul 2025 19:12:55 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:12:41+00:00 (#10326)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10326</link>
      <description>But this one is a user mode bug,  does it work with user mode too?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10326</guid>
      <pubDate>Wed, 23 Jul 2025 19:12:41 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:11:57+00:00 (#10325)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10325</link>
      <description>Driver verifier would catch mem corruptions on the spot</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10325</guid>
      <pubDate>Wed, 23 Jul 2025 19:11:57 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:11:57+00:00 (#10324)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10324</link>
      <description>It's been a long time that we didn't use it</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10324</guid>
      <pubDate>Wed, 23 Jul 2025 19:11:57 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:11:31+00:00 (#10323)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10323</link>
      <description>Do you use driver verifier btw?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10323</guid>
      <pubDate>Wed, 23 Jul 2025 19:11:31 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:11:30+00:00 (#10322)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10322</link>
      <description>We taught about heap corruption but honestly, this bug also triggered with a simple printf.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10322</guid>
      <pubDate>Wed, 23 Jul 2025 19:11:30 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:11:15+00:00 (#10321)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10321</link>
      <description>Maybe more like a race condition, since it is a public external variable</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10321</guid>
      <pubDate>Wed, 23 Jul 2025 19:11:15 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 19:10:47+00:00 (#10320)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10320</link>
      <description>Like what? Heap corruption? 🤔</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10320</guid>
      <pubDate>Wed, 23 Jul 2025 19:10:47 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:09:02+00:00 (#10319)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10319</link>
      <description>There must be something else</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10319</guid>
      <pubDate>Wed, 23 Jul 2025 19:09:02 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:08:50+00:00 (#10318)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10318</link>
      <description>Symbol mapping may be inaccurate in release builds</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10318</guid>
      <pubDate>Wed, 23 Jul 2025 19:08:50 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 19:07:28+00:00 (#10317)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10317</link>
      <description>Hey man, I checked the generated asm and I don't see any optimization bugs here:</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10317</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/10317.jpg" length="97692" type="image/jpeg"/>
      <pubDate>Wed, 23 Jul 2025 19:07:28 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 18:26:34+00:00 (#10316)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10316</link>
      <description>That's a good idea, but for us, we always need to have the latest version of VS since we have to discover and fix these kinds of issues before HyperDbg users encounter them. Other than that, for the release of HyperDbg, binaries we use GitHub actions. They usually have the updated version.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10316</guid>
      <pubDate>Wed, 23 Jul 2025 18:26:34 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-23 18:13:20+00:00 (#10315)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10315</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: me always having visual studio open so it never updates looks like it saved me from these versions.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10315</guid>
      <pubDate>Wed, 23 Jul 2025 18:13:20 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 17:08:20+00:00 (#10314)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10314</link>
      <description>Done</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10314</guid>
      <pubDate>Wed, 23 Jul 2025 17:08:20 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:08:13+00:00 (#10313)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10313</link>
      <description>Make sure to download it, I'll remove it in a bit to avoid adding a file in the group archive.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10313</guid>
      <pubDate>Wed, 23 Jul 2025 17:08:13 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:07:09+00:00 (#10311)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10311</link>
      <description>It is an example of the HyperDbg with this error:</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10311</guid>
      <pubDate>Wed, 23 Jul 2025 17:07:09 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 17:05:21+00:00 (#10310)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10310</link>
      <description>Is there a binary available? I don't have a set up for building rn. Don't worry if it's too tedious to get one</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10310</guid>
      <pubDate>Wed, 23 Jul 2025 17:05:21 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:03:30+00:00 (#10309)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10309</link>
      <description>Then loading HyperDbg, gives a very basic C compiler error.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10309</guid>
      <pubDate>Wed, 23 Jul 2025 17:03:30 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:03:03+00:00 (#10308)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10308</link>
      <description>And build it in the 'release' mode.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10308</guid>
      <pubDate>Wed, 23 Jul 2025 17:03:03 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:02:48+00:00 (#10307)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10307</link>
      <description>But to reproduce it, you can simply git checkout to this commit:
https://github.com/HyperDbg/HyperDbg/commit/9dbfebd5b00f47a19894c971a15d5418abc8521f</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10307</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/commit/9dbfebd5b00f47a19894c971a15d5418abc8521f" length="0" type="text/html"/>
      <pubDate>Wed, 23 Jul 2025 17:02:48 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:01:59+00:00 (#10306)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10306</link>
      <description>I didn't check the ASM.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10306</guid>
      <pubDate>Wed, 23 Jul 2025 17:01:59 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 17:01:28+00:00 (#10305)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10305</link>
      <description>What asm does it produce? Still can't find bug details</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10305</guid>
      <pubDate>Wed, 23 Jul 2025 17:01:28 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 17:00:17+00:00 (#10304)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10304</link>
      <description>But that's effed up, for real</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10304</guid>
      <pubDate>Wed, 23 Jul 2025 17:00:17 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 17:00:04+00:00 (#10303)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10303</link>
      <description>It's like very basic C statement that fails. It seems that others also encountered this issue:
https://x.com/rpcs3/status/1946069204282565100</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10303</guid>
      <pubDate>Wed, 23 Jul 2025 17:00:04 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 16:59:59+00:00 (#10302)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10302</link>
      <description>Hehe, I'm lucky that I skip major MSVS versions</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10302</guid>
      <pubDate>Wed, 23 Jul 2025 16:59:59 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 16:59:03+00:00 (#10301)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10301</link>
      <description>I even print the 'g_DeviceHandle' as an unsigned integer inside this 'if' statement and it shows 0, while the if statement is still triggered.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10301</guid>
      <pubDate>Wed, 23 Jul 2025 16:59:03 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 16:57:51+00:00 (#10300)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10300</link>
      <description>On Visual Studio 17.14.8 and 17.14.9 (Latest) if you use the user-mode optimization for 'libhyperdbg.dll', for this simple line of code, even though g_DeviceHandle is null, still it goes through the 'if' statement. Even initializing this variable doesn't help.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10300</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/10300.jpg" length="76394" type="image/jpeg"/>
      <pubDate>Wed, 23 Jul 2025 16:57:51 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-23 16:54:22+00:00 (#10299)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10299</link>
      <description>Which one exactly?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10299</guid>
      <pubDate>Wed, 23 Jul 2025 16:54:22 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 16:53:38+00:00 (#10298)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10298</link>
      <description>I see simple 'if' 'else' compiler bugs dues to the MSVC optimizations on HyperDbg.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10298</guid>
      <pubDate>Wed, 23 Jul 2025 16:53:38 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-23 16:52:58+00:00 (#10297)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10297</link>
      <description>This one was crazy: 
https://x.com/0Xiphorus/status/1948062027156426947</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10297</guid>
      <pubDate>Wed, 23 Jul 2025 16:52:58 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgChannel on 2025-07-23 10:50:38+00:00 (#10296)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10296</link>
      <description>I'm happy to announce that @HyperDbg v0.14 is released! 

This version includes HyperEvade (beta preview), fixes Win11 24H2 compatibility issues &amp; adds multiple timing functions to the script engine (Special thanks to Bjorn and all contributors).

Check it out: https://github.com/HyperDbg/HyperDbg/releases/tag/v0.14 
 
More info on HyperEvade: https://github.com/HyperDbg/slides/blob/main/2025/DEBT2025/hyperevade-ecoop2025-debt.pdf 

Microsleep function:
https://docs.hyperdbg.org/commands/scripting-language/functions/timings/microsleep

and RDTSC/RDTSCP:
https://docs.hyperdbg.org/commands/scripting-language/functions/timings/rdtsc

https://docs.hyperdbg.org/commands/scripting-language/functions/timings/rdtscp

Thanks to Tara for making this painting for us (it's not AI-generated).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10296</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/10296.jpg" length="159755" type="image/jpeg"/>
      <pubDate>Wed, 23 Jul 2025 10:50:38 +0000</pubDate>
    </item>
    <item>
      <title>@Esteral7 on 2025-07-23 07:31:34+00:00 (#10295)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10295</link>
      <description>Hey guys</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10295</guid>
      <pubDate>Wed, 23 Jul 2025 07:31:34 +0000</pubDate>
    </item>
    <item>
      <title>@Esteral7 on 2025-07-22 20:40:21+00:00 (#10294)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10294</link>
      <description></description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10294</guid>
      <pubDate>Tue, 22 Jul 2025 20:40:21 +0000</pubDate>
    </item>
    <item>
      <title>@7828427383 on 2025-07-22 16:57:26+00:00 (#10293)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10293</link>
      <description></description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10293</guid>
      <pubDate>Tue, 22 Jul 2025 16:57:26 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-22 02:14:10+00:00 (#10292)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10292</link>
      <description>Generally it’s a performance loss. I’ve known couple of devices that might machine check, but it would be considered as errata.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10292</guid>
      <pubDate>Tue, 22 Jul 2025 02:14:10 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-22 02:12:00+00:00 (#10291)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10291</link>
      <description>Thanks for adding these information. Just curious to know, what will happen if we set all of the out of range (above 512GB) memory to Uncacheable? Is it just about the performance or will it have any impact on the target device which might cause a crash?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10291</guid>
      <pubDate>Tue, 22 Jul 2025 02:12:00 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-22 02:09:24+00:00 (#10290)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10290</link>
      <description>Yes, but the only caveat is that we are consuming 2MBs of memory by using this approach which I think it's acceptable.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10290</guid>
      <pubDate>Tue, 22 Jul 2025 02:09:24 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-22 02:06:01+00:00 (#10289)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10289</link>
      <description>The ideal version of EPT coverage is using 4kb pages for known device mmio and large/huge pages for unused physical address space to save memory for EPT page tables.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10289</guid>
      <pubDate>Tue, 22 Jul 2025 02:06:01 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-22 02:01:52+00:00 (#10288)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10288</link>
      <description>This is a bit complicated. Devices might use cached memory for mmio sometimes, but MTRRs should help you with initial caching hint. The other problem I totally forgot to mention is you probably want to use 4kb EPT pages for mmio. It may not work otherwise. Sorry, I completely forgot to mention that.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10288</guid>
      <pubDate>Tue, 22 Jul 2025 02:01:52 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-22 01:57:51+00:00 (#10287)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10287</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: Thanks for adding the change. 

This way is more efficient since it avoids the ept violation + invept in the first place. As for creating the 511 * 512 block of PML3s instead of reusing the same page, its only 2mb - 4kb, shouldn't really matter. 

As for `PML3TemplateLarge.MemoryType    = MEMORY_TYPE_UNCACHEABLE;`, can some devices use a different memory type? eg GPU using WC for their frame buffer mmio address.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10287</guid>
      <pubDate>Tue, 22 Jul 2025 01:57:51 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-21 23:30:04+00:00 (#10286)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10286</link>
      <description>[discord] &lt;rayanfam&gt; If you have a better (more efficient) implementation, feel free to change it.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10286</guid>
      <pubDate>Mon, 21 Jul 2025 23:30:04 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-21 23:29:39+00:00 (#10285)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10285</link>
      <description>[discord] &lt;rayanfam&gt; https://github.com/HyperDbg/HyperDbg/pull/533</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10285</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/pull/533" length="0" type="text/html"/>
      <pubDate>Mon, 21 Jul 2025 23:29:39 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-07-21 23:29:38+00:00 (#10284)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10284</link>
      <description>[discord] &lt;rayanfam&gt; [reply]: I added the support for the addresses above 512 GB to HyperDbg:</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10284</guid>
      <pubDate>Mon, 21 Jul 2025 23:29:38 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:53:24+00:00 (#10283)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10283</link>
      <description>No problem!</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10283</guid>
      <pubDate>Sat, 19 Jul 2025 20:53:24 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:53:17+00:00 (#10282)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10282</link>
      <description>Thanks</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10282</guid>
      <pubDate>Sat, 19 Jul 2025 20:53:17 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:53:12+00:00 (#10281)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10281</link>
      <description>I think I got it.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10281</guid>
      <pubDate>Sat, 19 Jul 2025 20:53:12 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:52:01+00:00 (#10280)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10280</link>
      <description>Yes, exactly.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10280</guid>
      <pubDate>Sat, 19 Jul 2025 20:52:01 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:51:39+00:00 (#10279)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10279</link>
      <description>This is by the way how you set ECAM base address</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10279</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/10279.jpg" length="119340" type="image/jpeg"/>
      <pubDate>Sat, 19 Jul 2025 20:51:39 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:50:29+00:00 (#10278)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10278</link>
      <description>Those are initialized and locked in firmware (cpudxe)</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10278</guid>
      <pubDate>Sat, 19 Jul 2025 20:50:29 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:50:04+00:00 (#10277)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10277</link>
      <description>Even the system reserved address ranges are configurable:</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10277</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/10277.jpg" length="110793" type="image/jpeg"/>
      <pubDate>Sat, 19 Jul 2025 20:50:04 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:47:40+00:00 (#10276)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10276</link>
      <description>PCI headers reside in ECAM, BARs reside in PCI headers, point to any DMI-decode system address</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10276</guid>
      <pubDate>Sat, 19 Jul 2025 20:47:40 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:45:48+00:00 (#10275)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10275</link>
      <description>Not sure if I understand it. PCIe BARs are configured through PCIe CAM or ECAM. Isn't it like this?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10275</guid>
      <pubDate>Sat, 19 Jul 2025 20:45:48 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:45:04+00:00 (#10274)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10274</link>
      <description>No, PCI BARs</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10274</guid>
      <pubDate>Sat, 19 Jul 2025 20:45:04 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:45:02+00:00 (#10273)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10273</link>
      <description>Got it</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10273</guid>
      <pubDate>Sat, 19 Jul 2025 20:45:02 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:44:57+00:00 (#10272)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10272</link>
      <description>or ECAM</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10272</guid>
      <pubDate>Sat, 19 Jul 2025 20:44:57 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:44:52+00:00 (#10271)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10271</link>
      <description>Ah, you mean through PCI CAM</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10271</guid>
      <pubDate>Sat, 19 Jul 2025 20:44:52 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:44:00+00:00 (#10270)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10270</link>
      <description>PCI bridge resource regions as well</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10270</guid>
      <pubDate>Sat, 19 Jul 2025 20:44:00 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:43:47+00:00 (#10269)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10269</link>
      <description>PCI BARs</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10269</guid>
      <pubDate>Sat, 19 Jul 2025 20:43:47 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:43:28+00:00 (#10268)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10268</link>
      <description>Just curious to know, how? The only way that I know is through VT-d. What do they change to reorder these PCIe resources? 🤔</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10268</guid>
      <pubDate>Sat, 19 Jul 2025 20:43:28 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:42:55+00:00 (#10267)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10267</link>
      <description>It is debatable which approach is better. Linux doesn't trust the firmware and tried to follow the PCI spec. Windows trusts the firmware, and firmware does whatever it needs to do for the platform to perform better - PCI here is just a high level abstraction for lower level platform protocols and buses, so it is up to a vendor to decide what is better for the platform.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10267</guid>
      <pubDate>Sat, 19 Jul 2025 20:42:55 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:40:36+00:00 (#10266)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10266</link>
      <description>Interestingly, Linux reorders PCI resources to make MMIO ranges compact. So Linux BAR mappings are likely to be always different compared to what the firmware set up</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10266</guid>
      <pubDate>Sat, 19 Jul 2025 20:40:36 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:39:42+00:00 (#10265)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10265</link>
      <description>👍</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10265</guid>
      <pubDate>Sat, 19 Jul 2025 20:39:42 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:39:39+00:00 (#10264)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10264</link>
      <description>from CPU*</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10264</guid>
      <pubDate>Sat, 19 Jul 2025 20:39:39 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:39:27+00:00 (#10263)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10263</link>
      <description>It will, what I'm saying is you can't manually craft TLP packet with system address or something</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10263</guid>
      <pubDate>Sat, 19 Jul 2025 20:39:27 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:38:56+00:00 (#10262)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10262</link>
      <description>Well, isn't like this that writing into certain MMIO regions (PCIe BARs) will cause the CPU's PCIe root complex to create TLP packet for the endpoint devices? 🤔</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10262</guid>
      <pubDate>Sat, 19 Jul 2025 20:38:56 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:38:51+00:00 (#10261)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10261</link>
      <description>In fact I usually disable it because I don't want to emultate VTd device, while I still need it for transport drivers</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10261</guid>
      <pubDate>Sat, 19 Jul 2025 20:38:51 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:37:23+00:00 (#10260)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10260</link>
      <description>Let's skip VTd here for simplicity as well</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10260</guid>
      <pubDate>Sat, 19 Jul 2025 20:37:23 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:37:00+00:00 (#10259)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10259</link>
      <description>Also, what you described also doesn't cover the case when the firmware decided to map BARs to a farfaraway system address and Windows driver would use it later on</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10259</guid>
      <pubDate>Sat, 19 Jul 2025 20:37:00 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:36:09+00:00 (#10258)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10258</link>
      <description>Think of PCI BARs - you can literally set any system address there, it is designed to be that way.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10258</guid>
      <pubDate>Sat, 19 Jul 2025 20:36:09 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:35:41+00:00 (#10257)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10257</link>
      <description>There is no point thinking about TLPs because it is not programmable from the CPU anyway.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10257</guid>
      <pubDate>Sat, 19 Jul 2025 20:35:41 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:35:22+00:00 (#10256)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10256</link>
      <description>Interesting. I didn't realize it's because of that. 👍</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10256</guid>
      <pubDate>Sat, 19 Jul 2025 20:35:22 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:33:42+00:00 (#10255)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10255</link>
      <description>Well, I think it breaks some of my assumptions.

This is my understanding:
The device driver could only query for certain physical addresses of the target device. What they could do is map these far far away physical addresses to virtual addresses and then access the virtual address.

They could NOT re-map the physical address (MMIO address themselves), the only one who could do this is either Windows or UEFI Firmware by using Intel VT-d tables (is there any other way?)

Right now, we have the read/write into physical memory using !eb or !db commands:
https://docs.hyperdbg.org/commands/extension-commands/e

These commands check the validity of the address before writing into it. The way that we check it is by using the function I posted above.

Now, the problem is, assuming someone wants to create a TLP packet for a PCIe device by using '!eb' function and writing into the physical address (MMIO Address). If we check it with the above function, it says that the address is invalid; however, the address is a valid MMIO physical address, which we incorrectly avoid writing to it since our validity function says it's not valid.

Now the question is, how we should check whether the physical address is valid or not?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10255</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/extension-commands/e" length="0" type="text/html"/>
      <pubDate>Sat, 19 Jul 2025 20:33:42 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:31:33+00:00 (#10254)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10254</link>
      <description>I know, many vendors try to keep system address space compact. But it is not a must, you can place your MMIO regions almost anywhere you want.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10254</guid>
      <pubDate>Sat, 19 Jul 2025 20:31:33 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:29:54+00:00 (#10253)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10253</link>
      <description>I know it's rather big, but this is the exact reason why large and huge EPT pages exist.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10253</guid>
      <pubDate>Sat, 19 Jul 2025 20:29:54 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:29:27+00:00 (#10252)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10252</link>
      <description>This is why you should map the whole guest physical address space in EPT.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10252</guid>
      <pubDate>Sat, 19 Jul 2025 20:29:27 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:29:00+00:00 (#10251)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10251</link>
      <description>So whenever some driver needs to communicate with the device, it tries to access a virtual address for that MMIO ranges. MMU translates it to a far-far away physical address. And then it fails, because it's virtualized and EPT has no entry for that guest physical address.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10251</guid>
      <pubDate>Sat, 19 Jul 2025 20:29:00 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:26:38+00:00 (#10250)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10250</link>
      <description>Respective drivers map those system addresses to kernel virtual ones in order to be able to work with the device MMIO region.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10250</guid>
      <pubDate>Sat, 19 Jul 2025 20:26:38 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:26:03+00:00 (#10249)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10249</link>
      <description>Windows boots later on and recevies resources lists, including system addresses for MMIO ranges for devices.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10249</guid>
      <pubDate>Sat, 19 Jul 2025 20:26:03 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:25:27+00:00 (#10248)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10248</link>
      <description>I guess I need to disambiguate the term 'maps' here. Frimware sets up system address space layout for devices given those devices have UEFI drivers or ACPI methods. There you have physical addresses of MMIO regions for the devices.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10248</guid>
      <pubDate>Sat, 19 Jul 2025 20:25:27 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-07-19 20:21:57+00:00 (#10247)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10247</link>
      <description>But the OS has device drivers. The driver maps MMIO, which is mapped to that far far away physical (system) address. OS driver tries to access MMIO -&gt; EPT violation</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10247</guid>
      <pubDate>Sat, 19 Jul 2025 20:21:57 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-07-19 20:19:41+00:00 (#10246)</title>
      <link>https://tg-archive.hyperdbg.org/2025-07.html#10246</link>
      <description>OS? Isn't it the responsibility of UEFI firmware to map MMIO addresses to physical addresses?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-07.html#10246</guid>
      <pubDate>Sat, 19 Jul 2025 20:19:41 +0000</pubDate>
    </item>
  </channel>
</rss>
