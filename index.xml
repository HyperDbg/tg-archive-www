<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>@hyperdbg - Telegram group archive</title>
    <link>https://tg-archive.hyperdbg.org</link>
    <description>Public archive of HyperDbg Telegram messages.</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>tg-archive 1.2.1</generator>
    <lastBuildDate>Sun, 01 Jun 2025 19:11:41 +0000</lastBuildDate>
    <item>
      <title>@HughEverett on 2025-06-01 11:14:56+00:00 (#9964)</title>
      <link>https://tg-archive.hyperdbg.org/2025-06.html#9964</link>
      <description>Great. Thanks</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-06.html#9964</guid>
      <pubDate>Sun, 01 Jun 2025 11:14:56 +0000</pubDate>
    </item>
    <item>
      <title>@ma_jiajue on 2025-06-01 10:27:25+00:00 (#9963)</title>
      <link>https://tg-archive.hyperdbg.org/2025-06.html#9963</link>
      <description>Thank you for your reply. I will do my best to debug serial communication as I have two hosts with RS232.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-06.html#9963</guid>
      <pubDate>Sun, 01 Jun 2025 10:27:25 +0000</pubDate>
    </item>
    <item>
      <title>@6595241063 on 2025-05-31 14:28:28+00:00 (#9961)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9961</link>
      <description></description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9961</guid>
      <pubDate>Sat, 31 May 2025 14:28:28 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-29 17:01:16+00:00 (#9960)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9960</link>
      <description>Answering the questions that nobody asked again :) Serial connection is noisy, you would definitely need at least an error detection mechanism. Also, internal buffer size varies. This is the reason why my communication library is designed with a "pump" thread - a dedicated receiving thread that is always listening for incoming data.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9960</guid>
      <pubDate>Thu, 29 May 2025 17:01:16 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-29 16:57:42+00:00 (#9959)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9959</link>
      <description>I think the problem is because we don't have a resend mechanism in case if the serial connection have some incorrect bits.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9959</guid>
      <pubDate>Thu, 29 May 2025 16:57:42 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-29 16:56:53+00:00 (#9958)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9958</link>
      <description>Hey üëã 
Based on the discussion that we have in the group in the past, the serial connection over wire needs a verification (which we never add, because we never had a machine with physical serial port), so you can use it but if there is a physical error, HyperDbg will likely couldn't communicate with the debuggee. If you have a physical serial port and willing to spend a bit of time, you can debug it and fix the problem (then send PR on GitHub).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9958</guid>
      <pubDate>Thu, 29 May 2025 16:56:53 +0000</pubDate>
    </item>
    <item>
      <title>@ma_jiajue on 2025-05-29 04:44:22+00:00 (#9957)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9957</link>
      <description>In Debugger Mode, you can break the kernel mode and step through the kernel instructions. It needs a serial (cable or virtual device) to connect to the target machine. that is it</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9957</guid>
      <pubDate>Thu, 29 May 2025 04:44:22 +0000</pubDate>
    </item>
    <item>
      <title>@ma_jiajue on 2025-05-29 04:35:56+00:00 (#9956)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9956</link>
      <description>I read the doc of hyperdbg, it seems like it can debug the kernel of the victim pc, but i cannt confirm that.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9956</guid>
      <pubDate>Thu, 29 May 2025 04:35:56 +0000</pubDate>
    </item>
    <item>
      <title>@ma_jiajue on 2025-05-29 04:32:46+00:00 (#9955)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9955</link>
      <description>Hi, I run the hyperdbg in the victim PC, and connect this PC by serial port, so can I debug the victim PC' kernel?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9955</guid>
      <pubDate>Thu, 29 May 2025 04:32:46 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-28 17:34:14+00:00 (#9954)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9954</link>
      <description>[discord] &lt;ohault&gt; Super interesting, thank you. I have to think about it.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9954</guid>
      <pubDate>Wed, 28 May 2025 17:34:14 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-27 22:55:42+00:00 (#9953)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9953</link>
      <description>vmiss33 - 1711065099207639527.gif.mp4</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9953</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/9953.mp4" length="80993" type="video/mp4"/>
      <pubDate>Tue, 27 May 2025 22:55:42 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-27 22:55:34+00:00 (#9952)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9952</link>
      <description>Legend! Thanks a ton üôå</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9952</guid>
      <pubDate>Tue, 27 May 2025 22:55:34 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-27 22:38:56+00:00 (#9951)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9951</link>
      <description>Sure man!
Misconfigured EPT may also result in #MC. For example, PCI header space must be mapped as #UC, but your EPT entry may say it's #WB. The effective caching would be #WB then and CPU will try to access the memory that supposed to be accessed as #UC with #WB - this will trigger a #MC.
Note that MMIO space may use different types of caching, like #WC for framebuffers. So it is case by case scenario.
1. There are many many many protected ranges on Intel platform, Every stupid security feature relies on it's own "protected" region. Those regions may be protected for CPU access, for DMA access or for both. SMRAM is probably a well known protected region. But there are many. Can't tell you exact ones since I'm not sure they are documented, sorry.
2. GPU has its own memory view, but still uses system memory. That's why it uses its own page tables to map graphics addresses to physical addresses. GSM is a main memory stolen for global graphics address space page tables, it's a placeholder for GTT PTEs. DSM is a main memory stolen for graphics data - it is a legacy region. Older GPUs (approx before Broadwell) used a single memory region for graphics data - that size that you choose in BIOS settings. Modern iGPUs can use any system memory, not just DSM. It is protected for legacy reasons as well. CPU should not be accessing those memory regions directly, as instead it would use GPU MMIO to configure GTT PTEs and GMADR range for accessing graphics data - this way you would maintain cache coherency with between CPU and GPU.
I'd recommend building a system memory map to track MMIOs and protected regions, most of the info may be obtained from a root complex - device 0.0.0. But it is still platform specific.
3. For this I'd really recommend diving into Caching chapter in SDM when you have time and will. Because it is not just bypassing caches. Different types of caching create side effects when accessing memory from CPU. #UC is needed to serialize and control actual MMIO memory transactions in order for the device to function properly. For example, imagine a stinky I2C controller that is used to read a EDID from your monitor. In order to extract a EDID you must program the controller via MMIO and read the data by sequentially reading from a single 4 byte MMIO register. Imagine using #WB cache on it - you would not have control over when the memory request actually goes to the I2C controller. Also, I2C would expect a 32bit transaction on it's MMIO and not a full cache line fill when using #WB.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9951</guid>
      <pubDate>Tue, 27 May 2025 22:38:56 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-27 22:05:35+00:00 (#9950)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9950</link>
      <description>Oh, it looks like you also answered one of my questions too. I had noticed that certain memory ranges trigger a #MC (Machine Check), and I initially suspected it might be related to the caching flags in the Page Table Entries (PTE) when we read it through HyperDbg. Thanks for your explanation, it clarified a lot, and now I've got a whole new set of new questions. ü§îüßê

1. For the "protected ranges", are you referring only to SMRAM, where we typically see values like FF FF FF FF? or are there other memory regions that are considered protected besides SMRAM?

2. Also, what's inside the GSM and DSM (Graphics Stolen Memory and Data Stolen Memory) regions? Why are these ranges protected? Is there any way to read from them? I'm considering creating exceptions for specific physical memory ranges, such as GSM and DSM; so HyperDbg can avoid triggering a #MC and possibly read from them safely.

3. You also mentioned #UC (Uncacheable) memory. I've seen WinDbg suggest specifying [uc] when it fails to read certain memory regions, but I wasn't entirely sure why. Initially, I assumed it was because reads/writes might be served from the cache, and marking memory as [uc] would force direct access to the device itself, bypassing the cache. But based on your explanation, that assumption is wrong? Could you clarify this point a bit more?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9950</guid>
      <pubDate>Tue, 27 May 2025 22:05:35 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-27 21:25:47+00:00 (#9949)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9949</link>
      <description>Just to follow up on this. There are also protected RAM ranges. Best case they will return all FFFFFFFF dwords and igonre write. Worst case - they will trigger #MC - machine check exceptions. Examples would be GSM and DSM (Graphics stolen memory and Data stolen memory ranges).
With MMIOs it might be a third option - the whole platform may just hang. Sometimes power wells for respective MMIOs are disable, so there's no power on the answering side. CPU will issue those memory accesses synchronously (since #UC memory) and wait for the return value indefinitely.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9949</guid>
      <pubDate>Tue, 27 May 2025 21:25:47 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-27 21:20:42+00:00 (#9948)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9948</link>
      <description>HyperDbg accesses the entire memory if you specify a range, so if for example you access a PCIe BAR or a PCIe ECAM address, it generates TLP packets inside CPU, so in general just make sure to specify an actual RAM range for it to avoid touching memory ranges of devices.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9948</guid>
      <pubDate>Tue, 27 May 2025 21:20:42 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-27 21:16:53+00:00 (#9947)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9947</link>
      <description>Hey,
You can dump the virtual and physical memory using the '.dump' and '!dump' commands. It shouldn't be a problem to dump the memory (the actual RAM addresses, not MMIO/device ranges).

Virtual:
https://docs.hyperdbg.org/commands/meta-commands/.dump

Physical:
https://docs.hyperdbg.org/commands/extension-commands/dump</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9947</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/meta-commands/.dump" length="0" type="text/html"/>
      <pubDate>Tue, 27 May 2025 21:16:53 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-27 18:05:46+00:00 (#9946)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9946</link>
      <description>[discord] &lt;ohault&gt; Does it possible to browse full physical memory of the guest VM using HyberDbg GUI?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9946</guid>
      <pubDate>Tue, 27 May 2025 18:05:46 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:17:01+00:00 (#9945)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9945</link>
      <description>i see</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9945</guid>
      <pubDate>Mon, 26 May 2025 20:17:01 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:15:38+00:00 (#9944)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9944</link>
      <description>No, right now we won't restore the tsc.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9944</guid>
      <pubDate>Mon, 26 May 2025 20:15:38 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:15:22+00:00 (#9943)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9943</link>
      <description>yes, in reality (whenever you connect to a debuggee in the debugger mode using the '.debug' command), you get the TSC of the target executing core (in the guest).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9943</guid>
      <pubDate>Mon, 26 May 2025 20:15:22 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:14:36+00:00 (#9942)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9942</link>
      <description>yeah typo guest tsc</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9942</guid>
      <pubDate>Mon, 26 May 2025 20:14:36 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:14:20+00:00 (#9941)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9941</link>
      <description>guest tsc?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9941</guid>
      <pubDate>Mon, 26 May 2025 20:14:20 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:13:29+00:00 (#9940)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9940</link>
      <description>after vmexit tsc is restored in someway. Sorry my knowledge in this is very limited</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9940</guid>
      <pubDate>Mon, 26 May 2025 20:13:29 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:12:55+00:00 (#9939)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9939</link>
      <description>yeah so I'm not getting the guess tsc ?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9939</guid>
      <pubDate>Mon, 26 May 2025 20:12:55 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:09:56+00:00 (#9938)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9938</link>
      <description>like this one (for testing it):</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9938</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/9938.jpg" length="115099" type="image/jpeg"/>
      <pubDate>Mon, 26 May 2025 20:09:56 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:08:22+00:00 (#9937)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9937</link>
      <description>So, but they also execute in the user-mode for testing purposes. So, if you run the '?' command without connecting to a debugger in the debugger mode, it basically executes everything in the user-mode for testing purposes.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9937</guid>
      <pubDate>Mon, 26 May 2025 20:08:22 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:07:26+00:00 (#9936)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9936</link>
      <description>But the scripts (IRs) are evaluation and executed directly in VMX-root mode.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9936</guid>
      <pubDate>Mon, 26 May 2025 20:07:26 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 20:06:43+00:00 (#9935)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9935</link>
      <description>The script engine parser is running in the user-mode.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9935</guid>
      <pubDate>Mon, 26 May 2025 20:06:43 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:02:46+00:00 (#9934)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9934</link>
      <description>I'm not sure when calling __rdtsc() there I'm getting host or guess value</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9934</guid>
      <pubDate>Mon, 26 May 2025 20:02:46 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 20:02:25+00:00 (#9933)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9933</link>
      <description>is the scripting engine running in vmx-root or non root ?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9933</guid>
      <pubDate>Mon, 26 May 2025 20:02:25 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:59:24+00:00 (#9932)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9932</link>
      <description>Adding a new function or pseudo-register for the first time is a bit tricky. So, feel free to ask any question or problem that you encounter adding it.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9932</guid>
      <pubDate>Mon, 26 May 2025 19:59:24 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:58:18+00:00 (#9931)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9931</link>
      <description>Yes, that's the reason why it failed.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9931</guid>
      <pubDate>Mon, 26 May 2025 19:58:18 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:58:02+00:00 (#9930)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9930</link>
      <description>that's why</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9930</guid>
      <pubDate>Mon, 26 May 2025 19:58:02 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:58:00+00:00 (#9929)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9929</link>
      <description>oh I see I added the registername directly into the .c file</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9929</guid>
      <pubDate>Mon, 26 May 2025 19:58:00 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:57:59+00:00 (#9928)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9928</link>
      <description>And after that, just implement the function.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9928</guid>
      <pubDate>Mon, 26 May 2025 19:57:59 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:57:45+00:00 (#9927)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9927</link>
      <description>This will create the headers, constants and the grammar files for you.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9927</guid>
      <pubDate>Mon, 26 May 2025 19:57:45 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:56:48+00:00 (#9926)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9926</link>
      <description>Add your new pseudo-register or new function to them and then run the generator.py script.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9926</guid>
      <pubDate>Mon, 26 May 2025 19:56:48 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:56:18+00:00 (#9925)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9925</link>
      <description>There are two files here: Grammar.txt and Boolean_Expression_Grammar.txt</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9925</guid>
      <pubDate>Mon, 26 May 2025 19:56:18 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:55:43+00:00 (#9924)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9924</link>
      <description>If you want to make any modification in the script engine, please go to this directory: HyperDbg\hyperdbg\script-engine\python</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9924</guid>
      <pubDate>Mon, 26 May 2025 19:55:43 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:55:21+00:00 (#9923)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9923</link>
      <description>You probably modified the code of the script engine directly without running the Python script that generates the script engine.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9923</guid>
      <pubDate>Mon, 26 May 2025 19:55:21 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:54:00+00:00 (#9922)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9922</link>
      <description>I say it because it would be best if we can also have rdtscp (which I think RDTSCP do need an argument as input).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9922</guid>
      <pubDate>Mon, 26 May 2025 19:54:00 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:52:16+00:00 (#9921)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9921</link>
      <description>so maybe I did it the wrong way ?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9921</guid>
      <pubDate>Mon, 26 May 2025 19:52:16 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:52:07+00:00 (#9920)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9920</link>
      <description>I check the implementation of rdmsr and it's making call to the kernel driver</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9920</guid>
      <pubDate>Mon, 26 May 2025 19:52:07 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:51:48+00:00 (#9919)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9919</link>
      <description>Idk it keeps giving 80000000</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9919</guid>
      <pubDate>Mon, 26 May 2025 19:51:48 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:51:35+00:00 (#9918)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9918</link>
      <description>Why? ü§î</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9918</guid>
      <pubDate>Mon, 26 May 2025 19:51:35 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:51:23+00:00 (#9917)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9917</link>
      <description>Great. What about adding it as function instead of pseudo-register?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9917</guid>
      <pubDate>Mon, 26 May 2025 19:51:23 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:51:18+00:00 (#9916)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9916</link>
      <description>but it doesn't give correct value</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9916</guid>
      <pubDate>Mon, 26 May 2025 19:51:18 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:50:54+00:00 (#9915)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9915</link>
      <description>I tried to add a pseudo register $tsc</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9915</guid>
      <pubDate>Mon, 26 May 2025 19:50:54 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:50:32+00:00 (#9914)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9914</link>
      <description>ü§î</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9914</guid>
      <pubDate>Mon, 26 May 2025 19:50:32 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:50:29+00:00 (#9913)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9913</link>
      <description>Do we already have this? or is it your code?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9913</guid>
      <pubDate>Mon, 26 May 2025 19:50:29 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:50:21+00:00 (#9912)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9912</link>
      <description>yeah</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9912</guid>
      <pubDate>Mon, 26 May 2025 19:50:21 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:50:13+00:00 (#9911)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9911</link>
      <description>Is it a HyperDbg code?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9911</guid>
      <pubDate>Mon, 26 May 2025 19:50:13 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:50:01+00:00 (#9910)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9910</link>
      <description>about my question is that the right way to read guess tsc ?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9910</guid>
      <pubDate>Mon, 26 May 2025 19:50:01 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:49:19+00:00 (#9909)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9909</link>
      <description>Yeah sure. Go on and create PR.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9909</guid>
      <pubDate>Mon, 26 May 2025 19:49:19 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 19:48:04+00:00 (#9908)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9908</link>
      <description>for module+offset parsing</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9908</guid>
      <pubDate>Mon, 26 May 2025 19:48:04 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 19:47:40+00:00 (#9907)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9907</link>
      <description>Do you mean a pull request for having the base address of the modules (e.g., NT)?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9907</guid>
      <pubDate>Mon, 26 May 2025 19:47:40 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:31:54+00:00 (#9906)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9906</link>
      <description>it's possible in windbg also</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9906</guid>
      <pubDate>Mon, 26 May 2025 13:31:54 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:31:22+00:00 (#9905)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9905</link>
      <description>it prevent the need to change the script accross reboot</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9905</guid>
      <pubDate>Mon, 26 May 2025 13:31:22 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:28:47+00:00 (#9904)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9904</link>
      <description>~~~
/**
 * @brief Implementation of rdtsc pseudo-register
 *
 * @return UINT64
 */
UINT64
ScriptEnginePseudoRegGetTsc()
{
    return __rdtsc();
}~~~</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9904</guid>
      <pubDate>Mon, 26 May 2025 13:28:47 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:28:31+00:00 (#9902)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9902</link>
      <description>but for some reason I keep getting 80000000 value</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9902</guid>
      <pubDate>Mon, 26 May 2025 13:28:31 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:28:09+00:00 (#9901)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9901</link>
      <description>also I want to add pseudo register $tsc</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9901</guid>
      <pubDate>Mon, 26 May 2025 13:28:09 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 13:27:35+00:00 (#9900)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9900</link>
      <description>@sina if I can send pull request for that is it welcomed ?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9900</guid>
      <pubDate>Mon, 26 May 2025 13:27:35 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 12:48:45+00:00 (#9899)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9899</link>
      <description>what you can do is you can use the 'lm' command to find the base address of the module and then add your offset.  E.g., fffff801`5fa40000+123abc

https://docs.hyperdbg.org/commands/debugging-commands/lm</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9899</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/debugging-commands/lm" length="0" type="text/html"/>
      <pubDate>Mon, 26 May 2025 12:48:45 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-26 12:46:57+00:00 (#9898)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9898</link>
      <description>No it's not possible. It is possible to add offset to a function, register, pseudo-register or a symbol. Like nt!ExAllocatePoolWithTag+5a5 or @rsp+142f-10*100/abcd+($pid+$tid/10).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9898</guid>
      <pubDate>Mon, 26 May 2025 12:46:57 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 09:06:15+00:00 (#9897)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9897</link>
      <description>I've been trying but it seems not possible</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9897</guid>
      <pubDate>Mon, 26 May 2025 09:06:15 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 09:06:07+00:00 (#9896)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9896</link>
      <description>like u nt+0x1234</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9896</guid>
      <pubDate>Mon, 26 May 2025 09:06:07 +0000</pubDate>
    </item>
    <item>
      <title>@zuypt on 2025-05-26 09:06:02+00:00 (#9895)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9895</link>
      <description>hey guys is it possible to do module+offset syntax</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9895</guid>
      <pubDate>Mon, 26 May 2025 09:06:02 +0000</pubDate>
    </item>
    <item>
      <title>@only9464 on 2025-05-26 02:05:50+00:00 (#9894)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9894</link>
      <description></description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9894</guid>
      <pubDate>Mon, 26 May 2025 02:05:50 +0000</pubDate>
    </item>
    <item>
      <title>@xssaint on 2025-05-26 00:38:24+00:00 (#9893)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9893</link>
      <description>document_2025-05-26_00-38-24.mp4</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9893</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/9893.mp4" length="518830" type="video/mp4"/>
      <pubDate>Mon, 26 May 2025 00:38:24 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgChannel on 2025-05-25 22:22:46+00:00 (#9891)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9891</link>
      <description>HyperDbg v0.13.2 is out! üéâ

This version brings improvements and fixes stability issues in nested virtualization on Intel Meteor Lake processors.

Check it out:
https://github.com/HyperDbg/HyperDbg/releases/tag/v0.13.2</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9891</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/releases/tag/v0.13.2" length="0" type="text/html"/>
      <pubDate>Sun, 25 May 2025 22:22:46 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 16:31:31+00:00 (#9890)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9890</link>
      <description>[discord] &lt;subgraphisomorphism&gt; üëÅÔ∏è</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9890</guid>
      <pubDate>Sat, 24 May 2025 16:31:31 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 16:31:03+00:00 (#9889)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9889</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: Hey Stranger.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9889</guid>
      <pubDate>Sat, 24 May 2025 16:31:03 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 16:11:31+00:00 (#9888)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9888</link>
      <description>[discord] &lt;subgraphisomorphism&gt; Wagwan</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9888</guid>
      <pubDate>Sat, 24 May 2025 16:11:31 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-24 07:26:29+00:00 (#9887)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9887</link>
      <description>Good job! You‚Äôre welcome!</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9887</guid>
      <pubDate>Sat, 24 May 2025 07:26:29 +0000</pubDate>
    </item>
    <item>
      <title>@988459308 on 2025-05-24 06:08:48+00:00 (#9886)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9886</link>
      <description></description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9886</guid>
      <pubDate>Sat, 24 May 2025 06:08:48 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgChannel on 2025-05-24 05:29:08+00:00 (#9885)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9885</link>
      <description>üßô‚Äç‚ôÇÔ∏è Did you know you can easily hook, patch, or change arguments to functions both in user mode and kernel mode by using #HyperDbg?

Here‚Äôs a quick example üëá</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9885</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/9885.jpg" length="54168" type="image/jpeg"/>
      <pubDate>Sat, 24 May 2025 05:29:08 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 05:04:30+00:00 (#9884)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9884</link>
      <description>[discord] &lt;unrustled.jimmies&gt; I still need to add the proper CR4.LASS support you mentioned (and figure out why the EFI HV isn't working however)</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9884</guid>
      <pubDate>Sat, 24 May 2025 05:04:30 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 05:02:14+00:00 (#9883)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9883</link>
      <description>[discord] &lt;unrustled.jimmies&gt; thanks for all the help bro</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9883</guid>
      <pubDate>Sat, 24 May 2025 05:02:14 +0000</pubDate>
    </item>
    <item>
      <title>@HyperDbgBot on 2025-05-24 05:01:51+00:00 (#9882)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9882</link>
      <description>[discord] &lt;unrustled.jimmies&gt; [reply]: Posting from a fully hypervised win11 h2 arl machine üôÇ</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9882</guid>
      <pubDate>Sat, 24 May 2025 05:01:51 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 21:05:28+00:00 (#9881)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9881</link>
      <description>Oh, Great. I think I do understand it now. 
Thank you very much for your explanation. üôè</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9881</guid>
      <pubDate>Fri, 23 May 2025 21:05:28 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:54:33+00:00 (#9880)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9880</link>
      <description>So instead of writing a driver for every platform you can just use an ACPI method which basically interpreted into the same thing - in out instructions for a certain port.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9880</guid>
      <pubDate>Fri, 23 May 2025 20:54:33 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:53:54+00:00 (#9879)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9879</link>
      <description>Serial ports live in the LPC controller on that platform. It is not a PCI device. It is managed only through IO space (io read and write). You can actually find a datasheet for haswell that will say that serial ports are linked to LPC controller and show you the port numbers that are responsible for powering them on and off.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9879</guid>
      <pubDate>Fri, 23 May 2025 20:53:54 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:52:18+00:00 (#9878)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9878</link>
      <description>There is a description of methods to disable or enabled serial ports on haswell machine</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9878</guid>
      <pubDate>Fri, 23 May 2025 20:52:18 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:51:47+00:00 (#9877)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9877</link>
      <description>https://github.com/honorarybot/PulseDbg/wiki/4.-Serial-port-issues</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9877</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/https://github.com/honorarybot/PulseDbg/wiki/4.-Serial-port-issues" length="0" type="text/html"/>
      <pubDate>Fri, 23 May 2025 20:51:47 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:51:01+00:00 (#9876)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9876</link>
      <description>Oh, I have a good example of ACPI use</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9876</guid>
      <pubDate>Fri, 23 May 2025 20:51:01 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:50:07+00:00 (#9875)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9875</link>
      <description>Hehe, most of the time it is handled in embedded controllers, not ACPI</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9875</guid>
      <pubDate>Fri, 23 May 2025 20:50:07 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:49:25+00:00 (#9874)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9874</link>
      <description>Yeah, operation regions are ACPI terms. You have a special definition that basically describes the location of device resources and data. For example the operational region for a PCI device could be its BAR</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9874</guid>
      <pubDate>Fri, 23 May 2025 20:49:25 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 20:49:23+00:00 (#9873)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9873</link>
      <description>So, in case if Windows (or a vendor device driver) wants to change something (let say, the keyboard background light), it needs to execute one of these ACPI functions to perform the operation (e.g., change the keyboard background color on a laptop).</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9873</guid>
      <pubDate>Fri, 23 May 2025 20:49:23 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 20:47:28+00:00 (#9872)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9872</link>
      <description>I asked because I had previously spoken with one of the Linux kernel ACPI maintainers, and he told me that ACPI uses operation regions. So, I assumed that what we see in the DSDT is just the definition of a function. But as you described, the body of the function and everything it needs for execution is also included in the DSDT itself.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9872</guid>
      <pubDate>Fri, 23 May 2025 20:47:28 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 20:47:27+00:00 (#9871)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9871</link>
      <description>I just asked out of curiosity. At first, I thought that the functions in the DSDT were merely definitions of hardware functions that are executed within certain ACPI operation regions. From your explanation, I conclude that the DSDT defines the function itself, so there is no ACPI operation region or special hardware region required for that. The DSDT itself contains all the data for a function, let‚Äôs say it‚Äôs like a compiled binary where all the assembly instructions are included within the binary (the DSDT) itself, and the OS doesn‚Äôt need to know anything about any "magical" regions.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9871</guid>
      <pubDate>Fri, 23 May 2025 20:47:27 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:38:02+00:00 (#9870)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9870</link>
      <description>Platform devices, not even PCI necessarily</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9870</guid>
      <pubDate>Fri, 23 May 2025 20:38:02 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:37:45+00:00 (#9869)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9869</link>
      <description>Those are purely device drivers</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9869</guid>
      <pubDate>Fri, 23 May 2025 20:37:45 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:36:52+00:00 (#9868)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9868</link>
      <description>I‚Äôm also not even sure why would you need to execute those</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9868</guid>
      <pubDate>Fri, 23 May 2025 20:36:52 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:36:08+00:00 (#9867)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9867</link>
      <description>Yes, Windows executes this functions. There are certain power events that trigger execution of ASL code via ASL interpreter. If you want to execute them, you will have to write your own interpreter. But I would discourage you from doing that. ASL syntax is messy and DSDT is often malformed, so you need to keep workarounds for different OEMs.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9867</guid>
      <pubDate>Fri, 23 May 2025 20:36:08 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 20:33:38+00:00 (#9866)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9866</link>
      <description>Thanks a lot for explaining this. Whenever I dump DSDT and use iasl to convert it from AML to ASL format, I'll see something like this:

https://chromium.googlesource.com/chromiumos/third_party/coreboot/+/796af17f18554380a49d69d7768ac18ee039d711/src/mainboard/advansus/a785e-i/dsdt.asl

As you can see, here is the definition of some functions that are described in ASL format. The question is, can I execute these functions? Or in other words, does Windows (acpi.sys) execute these functions?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9866</guid>
      <enclosure url="https://tg-archive.hyperdbg.org/media/9866.jpg" length="70728" type="image/jpeg"/>
      <pubDate>Fri, 23 May 2025 20:33:38 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 20:14:05+00:00 (#9865)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9865</link>
      <description>Sure!
So as per spec there is a dedicated memory region for ACPI tables. Firmware builds those on boot. The first step is to find a root of all tables - RSDP. When using UEFI, you can get the address of it by checking out SystemTable-&gt;ConfigurationTable[iDesc].VendorGuid for being a GUID of ACPI 2.0 or 1.0, and then returning the actual address from SystemTable-&gt;ConfigurationTable[iDesc].VendorTable field.
If not found, you can get the EFI memory map and scan EfiACPIMemoryNVS and EfiACPIReclaimMemory memory types looking for the magic value of "RSD PTR " - that would be the RSDP table.
For legacy support (CSM or BIOS) RSDP is duplicated in EBDA - Extended BIOS Data Area (0xE0000-0xFFFFF). You also have to scan it for the magic value.
From there you will the pointers to all of the remaining tables. You can get multiprocessor info there, PCI ECAM address and a lot more.
One of the tables is DSDT - it has ACPI Source Language (ASL) code for platform devices. It's a cool way of skipping the need for platform drivers while being cross platform. In reality it sucks, it is a fucking hell. And those are not just my words, but word of a friend from Microsoft who used to maintain OSPM - OS Interpreter for ACPI.
So answering the question - OSPM (OS Power Management) is an operating system component that interprets ASL code from DSDT. For example on Windows acpi.sys is responsible for that. Checked builds of Windows had a special extended acpi.sys with a built in debugger for asl code. You can find a lot of references to it in WinDbg help file btw.
It does not operate on a specific range. In fact, the OS copies ACPI tables from firmware memory regions and caches them somewhere else, like registry on Windows. Execution runtime stays in the driver.
SMM is orthogonal. It does not directly imply ACPI. It is on it's own. But it's true that some devices can trigger SMIs directly. That would be the only thing connecting SMM and ACPI.</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9865</guid>
      <pubDate>Fri, 23 May 2025 20:14:05 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 19:57:58+00:00 (#9864)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9864</link>
      <description>I just have a random (off-topic) question, @honorary_bot. Do you know how we can find the ACPI operation range? I'm not sure if my understanding of ACPI tables is correct, but from what I understand, after the OS boots, the operating system can call some ACPI functions (whose definitions are available in the ACPI tables in AML format).

My question is: how are these functions called? And secondly, who is the handler in this case? Do we have any special memory range that is called ACPI operation range? Does calling ACPI functions trigger an SMI that's handled by the SMM handler, or am I completely misunderstanding this?</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9864</guid>
      <pubDate>Fri, 23 May 2025 19:57:58 +0000</pubDate>
    </item>
    <item>
      <title>@HughEverett on 2025-05-23 19:33:23+00:00 (#9863)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9863</link>
      <description>No, you can put EPT hooks with scripts.

E.g., you can log the execution of the target function:

!epthook nt!NtCreateFile script {
       printf("NtCreateFile is called in the kernel, rcx: %llx\n", @rcx);
}</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9863</guid>
      <pubDate>Fri, 23 May 2025 19:33:23 +0000</pubDate>
    </item>
    <item>
      <title>@honorary_bot on 2025-05-23 16:18:25+00:00 (#9862)</title>
      <link>https://tg-archive.hyperdbg.org/2025-05.html#9862</link>
      <description>Cool! Hope it works!</description>
      <guid isPermaLink="false">https://tg-archive.hyperdbg.org/2025-05.html#9862</guid>
      <pubDate>Fri, 23 May 2025 16:18:25 +0000</pubDate>
    </item>
  </channel>
</rss>
