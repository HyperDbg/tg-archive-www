<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://tg-archive.hyperdbg.org</id>
  <title>@hyperdbg - Telegram group archive</title>
  <updated>2025-06-01T19:11:41.745859+00:00</updated>
  <link href="https://tg-archive.hyperdbg.org" rel="alternate"/>
  <generator>tg-archive 1.2.1</generator>
  <subtitle>Public archive of HyperDbg Telegram messages.</subtitle>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-06.html#9964</id>
    <title>@HughEverett on 2025-06-01 11:14:56+00:00 (#9964)</title>
    <updated>2025-06-01T19:11:41.753693+00:00</updated>
    <content type="html">Great. Thanks</content>
    <link href="https://tg-archive.hyperdbg.org/2025-06.html#9964"/>
    <published>2025-06-01T11:14:56+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-06.html#9963</id>
    <title>@ma_jiajue on 2025-06-01 10:27:25+00:00 (#9963)</title>
    <updated>2025-06-01T19:11:41.753687+00:00</updated>
    <content type="html">Thank you for your reply. I will do my best to debug serial communication as I have two hosts with RS232.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-06.html#9963"/>
    <published>2025-06-01T10:27:25+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9961</id>
    <title>@6595241063 on 2025-05-31 14:28:28+00:00 (#9961)</title>
    <updated>2025-06-01T19:11:41.753681+00:00</updated>
    <content type="html"/>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9961"/>
    <published>2025-05-31T14:28:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9960</id>
    <title>@honorary_bot on 2025-05-29 17:01:16+00:00 (#9960)</title>
    <updated>2025-06-01T19:11:41.753675+00:00</updated>
    <content type="html">Answering the questions that nobody asked again :) Serial connection is noisy, you would definitely need at least an error detection mechanism. Also, internal buffer size varies. This is the reason why my communication library is designed with a "pump" thread - a dedicated receiving thread that is always listening for incoming data.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9960"/>
    <published>2025-05-29T17:01:16+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9959</id>
    <title>@HughEverett on 2025-05-29 16:57:42+00:00 (#9959)</title>
    <updated>2025-06-01T19:11:41.753669+00:00</updated>
    <content type="html">I think the problem is because we don't have a resend mechanism in case if the serial connection have some incorrect bits.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9959"/>
    <published>2025-05-29T16:57:42+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9958</id>
    <title>@HughEverett on 2025-05-29 16:56:53+00:00 (#9958)</title>
    <updated>2025-06-01T19:11:41.753663+00:00</updated>
    <content type="html">Hey üëã 
Based on the discussion that we have in the group in the past, the serial connection over wire needs a verification (which we never add, because we never had a machine with physical serial port), so you can use it but if there is a physical error, HyperDbg will likely couldn't communicate with the debuggee. If you have a physical serial port and willing to spend a bit of time, you can debug it and fix the problem (then send PR on GitHub).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9958"/>
    <published>2025-05-29T16:56:53+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9957</id>
    <title>@ma_jiajue on 2025-05-29 04:44:22+00:00 (#9957)</title>
    <updated>2025-06-01T19:11:41.753657+00:00</updated>
    <content type="html">In Debugger Mode, you can break the kernel mode and step through the kernel instructions. It needs a serial (cable or virtual device) to connect to the target machine. that is it</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9957"/>
    <published>2025-05-29T04:44:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9956</id>
    <title>@ma_jiajue on 2025-05-29 04:35:56+00:00 (#9956)</title>
    <updated>2025-06-01T19:11:41.753649+00:00</updated>
    <content type="html">I read the doc of hyperdbg, it seems like it can debug the kernel of the victim pc, but i cannt confirm that.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9956"/>
    <published>2025-05-29T04:35:56+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9955</id>
    <title>@ma_jiajue on 2025-05-29 04:32:46+00:00 (#9955)</title>
    <updated>2025-06-01T19:11:41.753640+00:00</updated>
    <content type="html">Hi, I run the hyperdbg in the victim PC, and connect this PC by serial port, so can I debug the victim PC' kernel?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9955"/>
    <published>2025-05-29T04:32:46+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9954</id>
    <title>@HyperDbgBot on 2025-05-28 17:34:14+00:00 (#9954)</title>
    <updated>2025-06-01T19:11:41.753628+00:00</updated>
    <content type="html">[discord] &lt;ohault&gt; Super interesting, thank you. I have to think about it.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9954"/>
    <published>2025-05-28T17:34:14+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9953</id>
    <title>@HughEverett on 2025-05-27 22:55:42+00:00 (#9953)</title>
    <updated>2025-06-01T19:11:41.753373+00:00</updated>
    <content type="html">vmiss33 - 1711065099207639527.gif.mp4</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9953"/>
    <link href="https://tg-archive.hyperdbg.org/media/9953.mp4"/>
    <published>2025-05-27T22:55:42+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9952</id>
    <title>@HughEverett on 2025-05-27 22:55:34+00:00 (#9952)</title>
    <updated>2025-06-01T19:11:41.753367+00:00</updated>
    <content type="html">Legend! Thanks a ton üôå</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9952"/>
    <published>2025-05-27T22:55:34+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9951</id>
    <title>@honorary_bot on 2025-05-27 22:38:56+00:00 (#9951)</title>
    <updated>2025-06-01T19:11:41.753361+00:00</updated>
    <content type="html">Sure man!
Misconfigured EPT may also result in #MC. For example, PCI header space must be mapped as #UC, but your EPT entry may say it's #WB. The effective caching would be #WB then and CPU will try to access the memory that supposed to be accessed as #UC with #WB - this will trigger a #MC.
Note that MMIO space may use different types of caching, like #WC for framebuffers. So it is case by case scenario.
1. There are many many many protected ranges on Intel platform, Every stupid security feature relies on it's own "protected" region. Those regions may be protected for CPU access, for DMA access or for both. SMRAM is probably a well known protected region. But there are many. Can't tell you exact ones since I'm not sure they are documented, sorry.
2. GPU has its own memory view, but still uses system memory. That's why it uses its own page tables to map graphics addresses to physical addresses. GSM is a main memory stolen for global graphics address space page tables, it's a placeholder for GTT PTEs. DSM is a main memory stolen for graphics data - it is a legacy region. Older GPUs (approx before Broadwell) used a single memory region for graphics data - that size that you choose in BIOS settings. Modern iGPUs can use any system memory, not just DSM. It is protected for legacy reasons as well. CPU should not be accessing those memory regions directly, as instead it would use GPU MMIO to configure GTT PTEs and GMADR range for accessing graphics data - this way you would maintain cache coherency with between CPU and GPU.
I'd recommend building a system memory map to track MMIOs and protected regions, most of the info may be obtained from a root complex - device 0.0.0. But it is still platform specific.
3. For this I'd really recommend diving into Caching chapter in SDM when you have time and will. Because it is not just bypassing caches. Different types of caching create side effects when accessing memory from CPU. #UC is needed to serialize and control actual MMIO memory transactions in order for the device to function properly. For example, imagine a stinky I2C controller that is used to read a EDID from your monitor. In order to extract a EDID you must program the controller via MMIO and read the data by sequentially reading from a single 4 byte MMIO register. Imagine using #WB cache on it - you would not have control over when the memory request actually goes to the I2C controller. Also, I2C would expect a 32bit transaction on it's MMIO and not a full cache line fill when using #WB.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9951"/>
    <published>2025-05-27T22:38:56+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9950</id>
    <title>@HughEverett on 2025-05-27 22:05:35+00:00 (#9950)</title>
    <updated>2025-06-01T19:11:41.753356+00:00</updated>
    <content type="html">Oh, it looks like you also answered one of my questions too. I had noticed that certain memory ranges trigger a #MC (Machine Check), and I initially suspected it might be related to the caching flags in the Page Table Entries (PTE) when we read it through HyperDbg. Thanks for your explanation, it clarified a lot, and now I've got a whole new set of new questions. ü§îüßê

1. For the "protected ranges", are you referring only to SMRAM, where we typically see values like FF FF FF FF? or are there other memory regions that are considered protected besides SMRAM?

2. Also, what's inside the GSM and DSM (Graphics Stolen Memory and Data Stolen Memory) regions? Why are these ranges protected? Is there any way to read from them? I'm considering creating exceptions for specific physical memory ranges, such as GSM and DSM; so HyperDbg can avoid triggering a #MC and possibly read from them safely.

3. You also mentioned #UC (Uncacheable) memory. I've seen WinDbg suggest specifying [uc] when it fails to read certain memory regions, but I wasn't entirely sure why. Initially, I assumed it was because reads/writes might be served from the cache, and marking memory as [uc] would force direct access to the device itself, bypassing the cache. But based on your explanation, that assumption is wrong? Could you clarify this point a bit more?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9950"/>
    <published>2025-05-27T22:05:35+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9949</id>
    <title>@honorary_bot on 2025-05-27 21:25:47+00:00 (#9949)</title>
    <updated>2025-06-01T19:11:41.753349+00:00</updated>
    <content type="html">Just to follow up on this. There are also protected RAM ranges. Best case they will return all FFFFFFFF dwords and igonre write. Worst case - they will trigger #MC - machine check exceptions. Examples would be GSM and DSM (Graphics stolen memory and Data stolen memory ranges).
With MMIOs it might be a third option - the whole platform may just hang. Sometimes power wells for respective MMIOs are disable, so there's no power on the answering side. CPU will issue those memory accesses synchronously (since #UC memory) and wait for the return value indefinitely.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9949"/>
    <published>2025-05-27T21:25:47+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9948</id>
    <title>@HughEverett on 2025-05-27 21:20:42+00:00 (#9948)</title>
    <updated>2025-06-01T19:11:41.753342+00:00</updated>
    <content type="html">HyperDbg accesses the entire memory if you specify a range, so if for example you access a PCIe BAR or a PCIe ECAM address, it generates TLP packets inside CPU, so in general just make sure to specify an actual RAM range for it to avoid touching memory ranges of devices.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9948"/>
    <published>2025-05-27T21:20:42+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9947</id>
    <title>@HughEverett on 2025-05-27 21:16:53+00:00 (#9947)</title>
    <updated>2025-06-01T19:11:41.753329+00:00</updated>
    <content type="html">Hey,
You can dump the virtual and physical memory using the '.dump' and '!dump' commands. It shouldn't be a problem to dump the memory (the actual RAM addresses, not MMIO/device ranges).

Virtual:
https://docs.hyperdbg.org/commands/meta-commands/.dump

Physical:
https://docs.hyperdbg.org/commands/extension-commands/dump</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9947"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/meta-commands/.dump"/>
    <published>2025-05-27T21:16:53+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9946</id>
    <title>@HyperDbgBot on 2025-05-27 18:05:46+00:00 (#9946)</title>
    <updated>2025-06-01T19:11:41.753323+00:00</updated>
    <content type="html">[discord] &lt;ohault&gt; Does it possible to browse full physical memory of the guest VM using HyberDbg GUI?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9946"/>
    <published>2025-05-27T18:05:46+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9945</id>
    <title>@zuypt on 2025-05-26 20:17:01+00:00 (#9945)</title>
    <updated>2025-06-01T19:11:41.753317+00:00</updated>
    <content type="html">i see</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9945"/>
    <published>2025-05-26T20:17:01+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9944</id>
    <title>@HughEverett on 2025-05-26 20:15:38+00:00 (#9944)</title>
    <updated>2025-06-01T19:11:41.753311+00:00</updated>
    <content type="html">No, right now we won't restore the tsc.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9944"/>
    <published>2025-05-26T20:15:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9943</id>
    <title>@HughEverett on 2025-05-26 20:15:22+00:00 (#9943)</title>
    <updated>2025-06-01T19:11:41.753305+00:00</updated>
    <content type="html">yes, in reality (whenever you connect to a debuggee in the debugger mode using the '.debug' command), you get the TSC of the target executing core (in the guest).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9943"/>
    <published>2025-05-26T20:15:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9942</id>
    <title>@zuypt on 2025-05-26 20:14:36+00:00 (#9942)</title>
    <updated>2025-06-01T19:11:41.753299+00:00</updated>
    <content type="html">yeah typo guest tsc</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9942"/>
    <published>2025-05-26T20:14:36+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9941</id>
    <title>@HughEverett on 2025-05-26 20:14:20+00:00 (#9941)</title>
    <updated>2025-06-01T19:11:41.753293+00:00</updated>
    <content type="html">guest tsc?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9941"/>
    <published>2025-05-26T20:14:20+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9940</id>
    <title>@zuypt on 2025-05-26 20:13:29+00:00 (#9940)</title>
    <updated>2025-06-01T19:11:41.753285+00:00</updated>
    <content type="html">after vmexit tsc is restored in someway. Sorry my knowledge in this is very limited</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9940"/>
    <published>2025-05-26T20:13:29+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9939</id>
    <title>@zuypt on 2025-05-26 20:12:55+00:00 (#9939)</title>
    <updated>2025-06-01T19:11:41.753274+00:00</updated>
    <content type="html">yeah so I'm not getting the guess tsc ?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9939"/>
    <published>2025-05-26T20:12:55+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9938</id>
    <title>@HughEverett on 2025-05-26 20:09:56+00:00 (#9938)</title>
    <updated>2025-06-01T19:11:41.753074+00:00</updated>
    <content type="html">like this one (for testing it):</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9938"/>
    <link href="https://tg-archive.hyperdbg.org/media/9938.jpg"/>
    <published>2025-05-26T20:09:56+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9937</id>
    <title>@HughEverett on 2025-05-26 20:08:22+00:00 (#9937)</title>
    <updated>2025-06-01T19:11:41.753068+00:00</updated>
    <content type="html">So, but they also execute in the user-mode for testing purposes. So, if you run the '?' command without connecting to a debugger in the debugger mode, it basically executes everything in the user-mode for testing purposes.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9937"/>
    <published>2025-05-26T20:08:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9936</id>
    <title>@HughEverett on 2025-05-26 20:07:26+00:00 (#9936)</title>
    <updated>2025-06-01T19:11:41.753062+00:00</updated>
    <content type="html">But the scripts (IRs) are evaluation and executed directly in VMX-root mode.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9936"/>
    <published>2025-05-26T20:07:26+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9935</id>
    <title>@HughEverett on 2025-05-26 20:06:43+00:00 (#9935)</title>
    <updated>2025-06-01T19:11:41.753057+00:00</updated>
    <content type="html">The script engine parser is running in the user-mode.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9935"/>
    <published>2025-05-26T20:06:43+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9934</id>
    <title>@zuypt on 2025-05-26 20:02:46+00:00 (#9934)</title>
    <updated>2025-06-01T19:11:41.753050+00:00</updated>
    <content type="html">I'm not sure when calling __rdtsc() there I'm getting host or guess value</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9934"/>
    <published>2025-05-26T20:02:46+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9933</id>
    <title>@zuypt on 2025-05-26 20:02:25+00:00 (#9933)</title>
    <updated>2025-06-01T19:11:41.753040+00:00</updated>
    <content type="html">is the scripting engine running in vmx-root or non root ?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9933"/>
    <published>2025-05-26T20:02:25+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9932</id>
    <title>@HughEverett on 2025-05-26 19:59:24+00:00 (#9932)</title>
    <updated>2025-06-01T19:11:41.753032+00:00</updated>
    <content type="html">Adding a new function or pseudo-register for the first time is a bit tricky. So, feel free to ask any question or problem that you encounter adding it.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9932"/>
    <published>2025-05-26T19:59:24+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9931</id>
    <title>@HughEverett on 2025-05-26 19:58:18+00:00 (#9931)</title>
    <updated>2025-06-01T19:11:41.753023+00:00</updated>
    <content type="html">Yes, that's the reason why it failed.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9931"/>
    <published>2025-05-26T19:58:18+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9930</id>
    <title>@zuypt on 2025-05-26 19:58:02+00:00 (#9930)</title>
    <updated>2025-06-01T19:11:41.753015+00:00</updated>
    <content type="html">that's why</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9930"/>
    <published>2025-05-26T19:58:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9929</id>
    <title>@zuypt on 2025-05-26 19:58:00+00:00 (#9929)</title>
    <updated>2025-06-01T19:11:41.753006+00:00</updated>
    <content type="html">oh I see I added the registername directly into the .c file</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9929"/>
    <published>2025-05-26T19:58:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9928</id>
    <title>@HughEverett on 2025-05-26 19:57:59+00:00 (#9928)</title>
    <updated>2025-06-01T19:11:41.752998+00:00</updated>
    <content type="html">And after that, just implement the function.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9928"/>
    <published>2025-05-26T19:57:59+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9927</id>
    <title>@HughEverett on 2025-05-26 19:57:45+00:00 (#9927)</title>
    <updated>2025-06-01T19:11:41.752990+00:00</updated>
    <content type="html">This will create the headers, constants and the grammar files for you.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9927"/>
    <published>2025-05-26T19:57:45+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9926</id>
    <title>@HughEverett on 2025-05-26 19:56:48+00:00 (#9926)</title>
    <updated>2025-06-01T19:11:41.752981+00:00</updated>
    <content type="html">Add your new pseudo-register or new function to them and then run the generator.py script.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9926"/>
    <published>2025-05-26T19:56:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9925</id>
    <title>@HughEverett on 2025-05-26 19:56:18+00:00 (#9925)</title>
    <updated>2025-06-01T19:11:41.752884+00:00</updated>
    <content type="html">There are two files here: Grammar.txt and Boolean_Expression_Grammar.txt</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9925"/>
    <published>2025-05-26T19:56:18+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9924</id>
    <title>@HughEverett on 2025-05-26 19:55:43+00:00 (#9924)</title>
    <updated>2025-06-01T19:11:41.752873+00:00</updated>
    <content type="html">If you want to make any modification in the script engine, please go to this directory: HyperDbg\hyperdbg\script-engine\python</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9924"/>
    <published>2025-05-26T19:55:43+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9923</id>
    <title>@HughEverett on 2025-05-26 19:55:21+00:00 (#9923)</title>
    <updated>2025-06-01T19:11:41.752857+00:00</updated>
    <content type="html">You probably modified the code of the script engine directly without running the Python script that generates the script engine.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9923"/>
    <published>2025-05-26T19:55:21+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9922</id>
    <title>@HughEverett on 2025-05-26 19:54:00+00:00 (#9922)</title>
    <updated>2025-06-01T19:11:41.752844+00:00</updated>
    <content type="html">I say it because it would be best if we can also have rdtscp (which I think RDTSCP do need an argument as input).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9922"/>
    <published>2025-05-26T19:54:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9921</id>
    <title>@zuypt on 2025-05-26 19:52:16+00:00 (#9921)</title>
    <updated>2025-06-01T19:11:41.752835+00:00</updated>
    <content type="html">so maybe I did it the wrong way ?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9921"/>
    <published>2025-05-26T19:52:16+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9920</id>
    <title>@zuypt on 2025-05-26 19:52:07+00:00 (#9920)</title>
    <updated>2025-06-01T19:11:41.752826+00:00</updated>
    <content type="html">I check the implementation of rdmsr and it's making call to the kernel driver</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9920"/>
    <published>2025-05-26T19:52:07+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9919</id>
    <title>@zuypt on 2025-05-26 19:51:48+00:00 (#9919)</title>
    <updated>2025-06-01T19:11:41.752817+00:00</updated>
    <content type="html">Idk it keeps giving 80000000</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9919"/>
    <published>2025-05-26T19:51:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9918</id>
    <title>@HughEverett on 2025-05-26 19:51:35+00:00 (#9918)</title>
    <updated>2025-06-01T19:11:41.752808+00:00</updated>
    <content type="html">Why? ü§î</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9918"/>
    <published>2025-05-26T19:51:35+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9917</id>
    <title>@HughEverett on 2025-05-26 19:51:23+00:00 (#9917)</title>
    <updated>2025-06-01T19:11:41.752797+00:00</updated>
    <content type="html">Great. What about adding it as function instead of pseudo-register?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9917"/>
    <published>2025-05-26T19:51:23+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9916</id>
    <title>@zuypt on 2025-05-26 19:51:18+00:00 (#9916)</title>
    <updated>2025-06-01T19:11:41.752787+00:00</updated>
    <content type="html">but it doesn't give correct value</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9916"/>
    <published>2025-05-26T19:51:18+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9915</id>
    <title>@zuypt on 2025-05-26 19:50:54+00:00 (#9915)</title>
    <updated>2025-06-01T19:11:41.752777+00:00</updated>
    <content type="html">I tried to add a pseudo register $tsc</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9915"/>
    <published>2025-05-26T19:50:54+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9914</id>
    <title>@HughEverett on 2025-05-26 19:50:32+00:00 (#9914)</title>
    <updated>2025-06-01T19:11:41.752761+00:00</updated>
    <content type="html">ü§î</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9914"/>
    <published>2025-05-26T19:50:32+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9913</id>
    <title>@HughEverett on 2025-05-26 19:50:29+00:00 (#9913)</title>
    <updated>2025-06-01T19:11:41.752752+00:00</updated>
    <content type="html">Do we already have this? or is it your code?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9913"/>
    <published>2025-05-26T19:50:29+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9912</id>
    <title>@zuypt on 2025-05-26 19:50:21+00:00 (#9912)</title>
    <updated>2025-06-01T19:11:41.752738+00:00</updated>
    <content type="html">yeah</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9912"/>
    <published>2025-05-26T19:50:21+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9911</id>
    <title>@HughEverett on 2025-05-26 19:50:13+00:00 (#9911)</title>
    <updated>2025-06-01T19:11:41.752729+00:00</updated>
    <content type="html">Is it a HyperDbg code?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9911"/>
    <published>2025-05-26T19:50:13+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9910</id>
    <title>@zuypt on 2025-05-26 19:50:01+00:00 (#9910)</title>
    <updated>2025-06-01T19:11:41.752720+00:00</updated>
    <content type="html">about my question is that the right way to read guess tsc ?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9910"/>
    <published>2025-05-26T19:50:01+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9909</id>
    <title>@HughEverett on 2025-05-26 19:49:19+00:00 (#9909)</title>
    <updated>2025-06-01T19:11:41.752711+00:00</updated>
    <content type="html">Yeah sure. Go on and create PR.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9909"/>
    <published>2025-05-26T19:49:19+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9908</id>
    <title>@zuypt on 2025-05-26 19:48:04+00:00 (#9908)</title>
    <updated>2025-06-01T19:11:41.752705+00:00</updated>
    <content type="html">for module+offset parsing</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9908"/>
    <published>2025-05-26T19:48:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9907</id>
    <title>@HughEverett on 2025-05-26 19:47:40+00:00 (#9907)</title>
    <updated>2025-06-01T19:11:41.752697+00:00</updated>
    <content type="html">Do you mean a pull request for having the base address of the modules (e.g., NT)?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9907"/>
    <published>2025-05-26T19:47:40+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9906</id>
    <title>@zuypt on 2025-05-26 13:31:54+00:00 (#9906)</title>
    <updated>2025-06-01T19:11:41.752688+00:00</updated>
    <content type="html">it's possible in windbg also</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9906"/>
    <published>2025-05-26T13:31:54+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9905</id>
    <title>@zuypt on 2025-05-26 13:31:22+00:00 (#9905)</title>
    <updated>2025-06-01T19:11:41.752681+00:00</updated>
    <content type="html">it prevent the need to change the script accross reboot</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9905"/>
    <published>2025-05-26T13:31:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9904</id>
    <title>@zuypt on 2025-05-26 13:28:47+00:00 (#9904)</title>
    <updated>2025-06-01T19:11:41.752675+00:00</updated>
    <content type="html">~~~
/**
 * @brief Implementation of rdtsc pseudo-register
 *
 * @return UINT64
 */
UINT64
ScriptEnginePseudoRegGetTsc()
{
    return __rdtsc();
}~~~</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9904"/>
    <published>2025-05-26T13:28:47+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9902</id>
    <title>@zuypt on 2025-05-26 13:28:31+00:00 (#9902)</title>
    <updated>2025-06-01T19:11:41.752668+00:00</updated>
    <content type="html">but for some reason I keep getting 80000000 value</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9902"/>
    <published>2025-05-26T13:28:31+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9901</id>
    <title>@zuypt on 2025-05-26 13:28:09+00:00 (#9901)</title>
    <updated>2025-06-01T19:11:41.752661+00:00</updated>
    <content type="html">also I want to add pseudo register $tsc</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9901"/>
    <published>2025-05-26T13:28:09+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9900</id>
    <title>@zuypt on 2025-05-26 13:27:35+00:00 (#9900)</title>
    <updated>2025-06-01T19:11:41.752654+00:00</updated>
    <content type="html">@sina if I can send pull request for that is it welcomed ?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9900"/>
    <published>2025-05-26T13:27:35+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9899</id>
    <title>@HughEverett on 2025-05-26 12:48:45+00:00 (#9899)</title>
    <updated>2025-06-01T19:11:41.752635+00:00</updated>
    <content type="html">what you can do is you can use the 'lm' command to find the base address of the module and then add your offset.  E.g., fffff801`5fa40000+123abc

https://docs.hyperdbg.org/commands/debugging-commands/lm</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9899"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/debugging-commands/lm"/>
    <published>2025-05-26T12:48:45+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9898</id>
    <title>@HughEverett on 2025-05-26 12:46:57+00:00 (#9898)</title>
    <updated>2025-06-01T19:11:41.752628+00:00</updated>
    <content type="html">No it's not possible. It is possible to add offset to a function, register, pseudo-register or a symbol. Like nt!ExAllocatePoolWithTag+5a5 or @rsp+142f-10*100/abcd+($pid+$tid/10).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9898"/>
    <published>2025-05-26T12:46:57+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9897</id>
    <title>@zuypt on 2025-05-26 09:06:15+00:00 (#9897)</title>
    <updated>2025-06-01T19:11:41.752620+00:00</updated>
    <content type="html">I've been trying but it seems not possible</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9897"/>
    <published>2025-05-26T09:06:15+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9896</id>
    <title>@zuypt on 2025-05-26 09:06:07+00:00 (#9896)</title>
    <updated>2025-06-01T19:11:41.752612+00:00</updated>
    <content type="html">like u nt+0x1234</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9896"/>
    <published>2025-05-26T09:06:07+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9895</id>
    <title>@zuypt on 2025-05-26 09:06:02+00:00 (#9895)</title>
    <updated>2025-06-01T19:11:41.752603+00:00</updated>
    <content type="html">hey guys is it possible to do module+offset syntax</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9895"/>
    <published>2025-05-26T09:06:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9894</id>
    <title>@only9464 on 2025-05-26 02:05:50+00:00 (#9894)</title>
    <updated>2025-06-01T19:11:41.752564+00:00</updated>
    <content type="html"/>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9894"/>
    <published>2025-05-26T02:05:50+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9893</id>
    <title>@xssaint on 2025-05-26 00:38:24+00:00 (#9893)</title>
    <updated>2025-06-01T19:11:41.747075+00:00</updated>
    <content type="html">document_2025-05-26_00-38-24.mp4</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9893"/>
    <link href="https://tg-archive.hyperdbg.org/media/9893.mp4"/>
    <published>2025-05-26T00:38:24+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9891</id>
    <title>@HyperDbgChannel on 2025-05-25 22:22:46+00:00 (#9891)</title>
    <updated>2025-06-01T19:11:41.747063+00:00</updated>
    <content type="html">HyperDbg v0.13.2 is out! üéâ

This version brings improvements and fixes stability issues in nested virtualization on Intel Meteor Lake processors.

Check it out:
https://github.com/HyperDbg/HyperDbg/releases/tag/v0.13.2</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9891"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/releases/tag/v0.13.2"/>
    <published>2025-05-25T22:22:46+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9890</id>
    <title>@HyperDbgBot on 2025-05-24 16:31:31+00:00 (#9890)</title>
    <updated>2025-06-01T19:11:41.747056+00:00</updated>
    <content type="html">[discord] &lt;subgraphisomorphism&gt; üëÅÔ∏è</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9890"/>
    <published>2025-05-24T16:31:31+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9889</id>
    <title>@HyperDbgBot on 2025-05-24 16:31:03+00:00 (#9889)</title>
    <updated>2025-06-01T19:11:41.747048+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: Hey Stranger.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9889"/>
    <published>2025-05-24T16:31:03+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9888</id>
    <title>@HyperDbgBot on 2025-05-24 16:11:31+00:00 (#9888)</title>
    <updated>2025-06-01T19:11:41.747040+00:00</updated>
    <content type="html">[discord] &lt;subgraphisomorphism&gt; Wagwan</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9888"/>
    <published>2025-05-24T16:11:31+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9887</id>
    <title>@honorary_bot on 2025-05-24 07:26:29+00:00 (#9887)</title>
    <updated>2025-06-01T19:11:41.747031+00:00</updated>
    <content type="html">Good job! You‚Äôre welcome!</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9887"/>
    <published>2025-05-24T07:26:29+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9886</id>
    <title>@988459308 on 2025-05-24 06:08:48+00:00 (#9886)</title>
    <updated>2025-06-01T19:11:41.747022+00:00</updated>
    <content type="html"/>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9886"/>
    <published>2025-05-24T06:08:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9885</id>
    <title>@HyperDbgChannel on 2025-05-24 05:29:08+00:00 (#9885)</title>
    <updated>2025-06-01T19:11:41.746885+00:00</updated>
    <content type="html">üßô‚Äç‚ôÇÔ∏è Did you know you can easily hook, patch, or change arguments to functions both in user mode and kernel mode by using #HyperDbg?

Here‚Äôs a quick example üëá</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9885"/>
    <link href="https://tg-archive.hyperdbg.org/media/9885.jpg"/>
    <published>2025-05-24T05:29:08+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9884</id>
    <title>@HyperDbgBot on 2025-05-24 05:04:30+00:00 (#9884)</title>
    <updated>2025-06-01T19:11:41.746828+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; I still need to add the proper CR4.LASS support you mentioned (and figure out why the EFI HV isn't working however)</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9884"/>
    <published>2025-05-24T05:04:30+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9883</id>
    <title>@HyperDbgBot on 2025-05-24 05:02:14+00:00 (#9883)</title>
    <updated>2025-06-01T19:11:41.746771+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; thanks for all the help bro</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9883"/>
    <published>2025-05-24T05:02:14+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9882</id>
    <title>@HyperDbgBot on 2025-05-24 05:01:51+00:00 (#9882)</title>
    <updated>2025-06-01T19:11:41.746729+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: Posting from a fully hypervised win11 h2 arl machine üôÇ</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9882"/>
    <published>2025-05-24T05:01:51+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9881</id>
    <title>@HughEverett on 2025-05-23 21:05:28+00:00 (#9881)</title>
    <updated>2025-06-01T19:11:41.746723+00:00</updated>
    <content type="html">Oh, Great. I think I do understand it now. 
Thank you very much for your explanation. üôè</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9881"/>
    <published>2025-05-23T21:05:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9880</id>
    <title>@honorary_bot on 2025-05-23 20:54:33+00:00 (#9880)</title>
    <updated>2025-06-01T19:11:41.746718+00:00</updated>
    <content type="html">So instead of writing a driver for every platform you can just use an ACPI method which basically interpreted into the same thing - in out instructions for a certain port.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9880"/>
    <published>2025-05-23T20:54:33+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9879</id>
    <title>@honorary_bot on 2025-05-23 20:53:54+00:00 (#9879)</title>
    <updated>2025-06-01T19:11:41.746709+00:00</updated>
    <content type="html">Serial ports live in the LPC controller on that platform. It is not a PCI device. It is managed only through IO space (io read and write). You can actually find a datasheet for haswell that will say that serial ports are linked to LPC controller and show you the port numbers that are responsible for powering them on and off.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9879"/>
    <published>2025-05-23T20:53:54+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9878</id>
    <title>@honorary_bot on 2025-05-23 20:52:18+00:00 (#9878)</title>
    <updated>2025-06-01T19:11:41.746703+00:00</updated>
    <content type="html">There is a description of methods to disable or enabled serial ports on haswell machine</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9878"/>
    <published>2025-05-23T20:52:18+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9877</id>
    <title>@honorary_bot on 2025-05-23 20:51:47+00:00 (#9877)</title>
    <updated>2025-06-01T19:11:41.746691+00:00</updated>
    <content type="html">https://github.com/honorarybot/PulseDbg/wiki/4.-Serial-port-issues</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9877"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://github.com/honorarybot/PulseDbg/wiki/4.-Serial-port-issues"/>
    <published>2025-05-23T20:51:47+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9876</id>
    <title>@honorary_bot on 2025-05-23 20:51:01+00:00 (#9876)</title>
    <updated>2025-06-01T19:11:41.746686+00:00</updated>
    <content type="html">Oh, I have a good example of ACPI use</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9876"/>
    <published>2025-05-23T20:51:01+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9875</id>
    <title>@honorary_bot on 2025-05-23 20:50:07+00:00 (#9875)</title>
    <updated>2025-06-01T19:11:41.746681+00:00</updated>
    <content type="html">Hehe, most of the time it is handled in embedded controllers, not ACPI</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9875"/>
    <published>2025-05-23T20:50:07+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9874</id>
    <title>@honorary_bot on 2025-05-23 20:49:25+00:00 (#9874)</title>
    <updated>2025-06-01T19:11:41.746672+00:00</updated>
    <content type="html">Yeah, operation regions are ACPI terms. You have a special definition that basically describes the location of device resources and data. For example the operational region for a PCI device could be its BAR</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9874"/>
    <published>2025-05-23T20:49:25+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9873</id>
    <title>@HughEverett on 2025-05-23 20:49:23+00:00 (#9873)</title>
    <updated>2025-06-01T19:11:41.746666+00:00</updated>
    <content type="html">So, in case if Windows (or a vendor device driver) wants to change something (let say, the keyboard background light), it needs to execute one of these ACPI functions to perform the operation (e.g., change the keyboard background color on a laptop).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9873"/>
    <published>2025-05-23T20:49:23+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9872</id>
    <title>@HughEverett on 2025-05-23 20:47:28+00:00 (#9872)</title>
    <updated>2025-06-01T19:11:41.746661+00:00</updated>
    <content type="html">I asked because I had previously spoken with one of the Linux kernel ACPI maintainers, and he told me that ACPI uses operation regions. So, I assumed that what we see in the DSDT is just the definition of a function. But as you described, the body of the function and everything it needs for execution is also included in the DSDT itself.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9872"/>
    <published>2025-05-23T20:47:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9871</id>
    <title>@HughEverett on 2025-05-23 20:47:27+00:00 (#9871)</title>
    <updated>2025-06-01T19:11:41.746654+00:00</updated>
    <content type="html">I just asked out of curiosity. At first, I thought that the functions in the DSDT were merely definitions of hardware functions that are executed within certain ACPI operation regions. From your explanation, I conclude that the DSDT defines the function itself, so there is no ACPI operation region or special hardware region required for that. The DSDT itself contains all the data for a function, let‚Äôs say it‚Äôs like a compiled binary where all the assembly instructions are included within the binary (the DSDT) itself, and the OS doesn‚Äôt need to know anything about any "magical" regions.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9871"/>
    <published>2025-05-23T20:47:27+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9870</id>
    <title>@honorary_bot on 2025-05-23 20:38:02+00:00 (#9870)</title>
    <updated>2025-06-01T19:11:41.746648+00:00</updated>
    <content type="html">Platform devices, not even PCI necessarily</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9870"/>
    <published>2025-05-23T20:38:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9869</id>
    <title>@honorary_bot on 2025-05-23 20:37:45+00:00 (#9869)</title>
    <updated>2025-06-01T19:11:41.746641+00:00</updated>
    <content type="html">Those are purely device drivers</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9869"/>
    <published>2025-05-23T20:37:45+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9868</id>
    <title>@honorary_bot on 2025-05-23 20:36:52+00:00 (#9868)</title>
    <updated>2025-06-01T19:11:41.746632+00:00</updated>
    <content type="html">I‚Äôm also not even sure why would you need to execute those</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9868"/>
    <published>2025-05-23T20:36:52+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9867</id>
    <title>@honorary_bot on 2025-05-23 20:36:08+00:00 (#9867)</title>
    <updated>2025-06-01T19:11:41.746592+00:00</updated>
    <content type="html">Yes, Windows executes this functions. There are certain power events that trigger execution of ASL code via ASL interpreter. If you want to execute them, you will have to write your own interpreter. But I would discourage you from doing that. ASL syntax is messy and DSDT is often malformed, so you need to keep workarounds for different OEMs.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9867"/>
    <published>2025-05-23T20:36:08+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9866</id>
    <title>@HughEverett on 2025-05-23 20:33:38+00:00 (#9866)</title>
    <updated>2025-06-01T19:11:41.746339+00:00</updated>
    <content type="html">Thanks a lot for explaining this. Whenever I dump DSDT and use iasl to convert it from AML to ASL format, I'll see something like this:

https://chromium.googlesource.com/chromiumos/third_party/coreboot/+/796af17f18554380a49d69d7768ac18ee039d711/src/mainboard/advansus/a785e-i/dsdt.asl

As you can see, here is the definition of some functions that are described in ASL format. The question is, can I execute these functions? Or in other words, does Windows (acpi.sys) execute these functions?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9866"/>
    <link href="https://tg-archive.hyperdbg.org/media/9866.jpg"/>
    <published>2025-05-23T20:33:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9865</id>
    <title>@honorary_bot on 2025-05-23 20:14:05+00:00 (#9865)</title>
    <updated>2025-06-01T19:11:41.746332+00:00</updated>
    <content type="html">Sure!
So as per spec there is a dedicated memory region for ACPI tables. Firmware builds those on boot. The first step is to find a root of all tables - RSDP. When using UEFI, you can get the address of it by checking out SystemTable-&gt;ConfigurationTable[iDesc].VendorGuid for being a GUID of ACPI 2.0 or 1.0, and then returning the actual address from SystemTable-&gt;ConfigurationTable[iDesc].VendorTable field.
If not found, you can get the EFI memory map and scan EfiACPIMemoryNVS and EfiACPIReclaimMemory memory types looking for the magic value of "RSD PTR " - that would be the RSDP table.
For legacy support (CSM or BIOS) RSDP is duplicated in EBDA - Extended BIOS Data Area (0xE0000-0xFFFFF). You also have to scan it for the magic value.
From there you will the pointers to all of the remaining tables. You can get multiprocessor info there, PCI ECAM address and a lot more.
One of the tables is DSDT - it has ACPI Source Language (ASL) code for platform devices. It's a cool way of skipping the need for platform drivers while being cross platform. In reality it sucks, it is a fucking hell. And those are not just my words, but word of a friend from Microsoft who used to maintain OSPM - OS Interpreter for ACPI.
So answering the question - OSPM (OS Power Management) is an operating system component that interprets ASL code from DSDT. For example on Windows acpi.sys is responsible for that. Checked builds of Windows had a special extended acpi.sys with a built in debugger for asl code. You can find a lot of references to it in WinDbg help file btw.
It does not operate on a specific range. In fact, the OS copies ACPI tables from firmware memory regions and caches them somewhere else, like registry on Windows. Execution runtime stays in the driver.
SMM is orthogonal. It does not directly imply ACPI. It is on it's own. But it's true that some devices can trigger SMIs directly. That would be the only thing connecting SMM and ACPI.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9865"/>
    <published>2025-05-23T20:14:05+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9864</id>
    <title>@HughEverett on 2025-05-23 19:57:58+00:00 (#9864)</title>
    <updated>2025-06-01T19:11:41.746324+00:00</updated>
    <content type="html">I just have a random (off-topic) question, @honorary_bot. Do you know how we can find the ACPI operation range? I'm not sure if my understanding of ACPI tables is correct, but from what I understand, after the OS boots, the operating system can call some ACPI functions (whose definitions are available in the ACPI tables in AML format).

My question is: how are these functions called? And secondly, who is the handler in this case? Do we have any special memory range that is called ACPI operation range? Does calling ACPI functions trigger an SMI that's handled by the SMM handler, or am I completely misunderstanding this?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9864"/>
    <published>2025-05-23T19:57:58+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9863</id>
    <title>@HughEverett on 2025-05-23 19:33:23+00:00 (#9863)</title>
    <updated>2025-06-01T19:11:41.746314+00:00</updated>
    <content type="html">No, you can put EPT hooks with scripts.

E.g., you can log the execution of the target function:

!epthook nt!NtCreateFile script {
       printf("NtCreateFile is called in the kernel, rcx: %llx\n", @rcx);
}</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9863"/>
    <published>2025-05-23T19:33:23+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-05.html#9862</id>
    <title>@honorary_bot on 2025-05-23 16:18:25+00:00 (#9862)</title>
    <updated>2025-06-01T19:11:41.746265+00:00</updated>
    <content type="html">Cool! Hope it works!</content>
    <link href="https://tg-archive.hyperdbg.org/2025-05.html#9862"/>
    <published>2025-05-23T16:18:25+00:00</published>
  </entry>
</feed>
