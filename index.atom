<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://tg-archive.hyperdbg.org</id>
  <title>@hyperdbg - Telegram group archive</title>
  <updated>2025-07-26T00:13:55.487351+00:00</updated>
  <link href="https://tg-archive.hyperdbg.org" rel="alternate"/>
  <generator>tg-archive 1.3.0</generator>
  <subtitle>Public archive of HyperDbg Telegram messages.</subtitle>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10346</id>
    <title>@HughEverett on 2025-07-24 14:07:48+00:00 (#10346)</title>
    <updated>2025-07-26T00:13:55.492708+00:00</updated>
    <content type="html">Hey,
Just to clarify, I'm not working in the anti-cheat area myself. Also, this group is focused on HyperDbg and hypervisor-related topics. Let's try to keep the discussions on-topic to benefit everyone here. Appreciate your understanding!</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10346"/>
    <published>2025-07-24T14:07:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10345</id>
    <title>@6595241063 on 2025-07-24 13:28:48+00:00 (#10345)</title>
    <updated>2025-07-26T00:13:55.492702+00:00</updated>
    <content type="html">@HughEverett boss</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10345"/>
    <published>2025-07-24T13:28:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10344</id>
    <title>@6595241063 on 2025-07-24 13:26:59+00:00 (#10344)</title>
    <updated>2025-07-26T00:13:55.492695+00:00</updated>
    <content type="html">Is there a blog or example of hyper-V bypassing anti-cheat detection?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10344"/>
    <published>2025-07-24T13:26:59+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10343</id>
    <title>@HyperDbgBot on 2025-07-23 23:00:04+00:00 (#10343)</title>
    <updated>2025-07-26T00:13:55.492689+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: yeah, the best case scenario is a crash. worst case, it works.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10343"/>
    <published>2025-07-23T23:00:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10342</id>
    <title>@honorary_bot on 2025-07-23 22:54:04+00:00 (#10342)</title>
    <updated>2025-07-26T00:13:55.492683+00:00</updated>
    <content type="html">This bug actually reminded me that I had the same bug once. I assumed that home space is only used for saving function parameters and I could skip it for a small function that doesn't even touch memory. I was wrong, optimizing compiler uses home space however it wants. And the corruption was wild - I was lucky to corrupt the local APIC ID field of a neighbour virtual CPU, which was supposed to be a read only field.. Pheww</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10342"/>
    <published>2025-07-23T22:54:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10341</id>
    <title>@HughEverett on 2025-07-23 22:49:10+00:00 (#10341)</title>
    <updated>2025-07-26T00:13:55.492674+00:00</updated>
    <content type="html">There are not that much assembly codes in HyperDbg. Specially, in user mode, I think we only have one or two. 🤔</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10341"/>
    <published>2025-07-23T22:49:10+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10340</id>
    <title>@HughEverett on 2025-07-23 22:48:21+00:00 (#10340)</title>
    <updated>2025-07-26T00:13:55.492667+00:00</updated>
    <content type="html">Sure. I'll check it too. It would be best if you could check other assembly codes as well, so we both go through it and hopefully we won't miss anything together.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10340"/>
    <published>2025-07-23T22:48:21+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10339</id>
    <title>@HyperDbgBot on 2025-07-23 22:46:48+00:00 (#10339)</title>
    <updated>2025-07-26T00:13:55.492605+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: Yep ill take a look at this but this is a good opportunity to go over all the hand written assembly just to make sure its not silently happening anywhere else and working by chance.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10339"/>
    <published>2025-07-23T22:46:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10338</id>
    <title>@HughEverett on 2025-07-23 22:46:04+00:00 (#10338)</title>
    <updated>2025-07-26T00:13:55.492598+00:00</updated>
    <content type="html">I promise I won't fix it before you again (like last time). 😜</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10338"/>
    <published>2025-07-23T22:46:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10337</id>
    <title>@HughEverett on 2025-07-23 22:45:04+00:00 (#10337)</title>
    <updated>2025-07-26T00:13:55.492591+00:00</updated>
    <content type="html">I think it's just one function that we wrote here in assembly, but since you spent a bit of time debugging it, it's probably better you fix it.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10337"/>
    <published>2025-07-23T22:45:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10336</id>
    <title>@HughEverett on 2025-07-23 22:44:08+00:00 (#10336)</title>
    <updated>2025-07-26T00:13:55.492585+00:00</updated>
    <content type="html">Oh, great. It would be best if you could send a PR to fix it too.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10336"/>
    <published>2025-07-23T22:44:08+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10335</id>
    <title>@HyperDbgBot on 2025-07-23 22:43:02+00:00 (#10335)</title>
    <updated>2025-07-26T00:13:55.492581+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; using x64dbg to debug hyperdbg 🙂</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10335"/>
    <published>2025-07-23T22:43:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10334</id>
    <title>@HyperDbgBot on 2025-07-23 22:41:31+00:00 (#10334)</title>
    <updated>2025-07-26T00:13:55.492575+00:00</updated>
    <content type="html">[discord] &lt;honorary_bot&gt; Nice catch man. Yeah, handcrafted assembly does require home space at least.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10334"/>
    <published>2025-07-23T22:41:31+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10333</id>
    <title>@HyperDbgBot on 2025-07-23 22:39:55+00:00 (#10333)</title>
    <updated>2025-07-26T00:13:55.492560+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: Doesn't look like its a bug in msvc. In the optimized build, rbx is getting clobbered out of band with the AsmVmxSupportDetection  call it looks like but msvc still thinks its 0 at the point of comparison so it uses that to cmp device with 0x0. In the unoptimized build, its comparing the memory location to 0x0 directly. 

for all of your custom written assembly, make sure you either write it like a real function with the prologue or epilogue manually or at least save/restore the non volatile registers (in this case it was tricky since rbx was getting clobbered by cpuid behind the scenes).
https://cdn.discordapp.com/attachments/962350355839066130/1397709841673486446/Screenshot_2025-07-23_141845.png?ex=6882b63a&amp;is=688164ba&amp;hm=6fd18571cdc714852ec775e8a7b084fe591c553733294045034e39a7fdebfc14&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709842088591393/Screenshot_2025-07-23_142605.png?ex=6882b63a&amp;is=688164ba&amp;hm=199b4eb5763c1a20e9ca804161982e086ec5598d9732d2d52861229ceb5680aa&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709842520477767/before.png?ex=6882b63a&amp;is=688164ba&amp;hm=5834ba09daa7f16941a707857946c660903804f03edca4e2519aa5d70782da8a&amp;
https://cdn.discordapp.com/attachments/962350355839066130/1397709843045027841/after.png?ex=6882b63a&amp;is=688164ba&amp;hm=ff2e04472cdce7f3a59035eb441eb0082c498a1a51c2a99512f7b1770df79398&amp;</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10333"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://cdn.discordapp.com/attachments/962350355839066130/1397709841673486446/Screenshot_2025-07-23_141845.png?ex=6882b63a&amp;is=688164ba&amp;hm=6fd18571cdc714852ec775e8a7b084fe591c553733294045034e39a7fdebfc14&amp;"/>
    <published>2025-07-23T22:39:55+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10332</id>
    <title>@HughEverett on 2025-07-23 19:15:05+00:00 (#10332)</title>
    <updated>2025-07-26T00:13:55.492554+00:00</updated>
    <content type="html">Great. I'll test it and if it finds anything I'll let you know.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10332"/>
    <published>2025-07-23T19:15:05+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10331</id>
    <title>@honorary_bot on 2025-07-23 19:14:22+00:00 (#10331)</title>
    <updated>2025-07-26T00:13:55.492549+00:00</updated>
    <content type="html">Yeah, sort of. It just depends on a heap allocator being used</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10331"/>
    <published>2025-07-23T19:14:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10330</id>
    <title>@HughEverett on 2025-07-23 19:14:00+00:00 (#10330)</title>
    <updated>2025-07-26T00:13:55.492544+00:00</updated>
    <content type="html">Application verifier is an alternative to the driver verifier in user mode?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10330"/>
    <published>2025-07-23T19:14:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10329</id>
    <title>@honorary_bot on 2025-07-23 19:13:20+00:00 (#10329)</title>
    <updated>2025-07-26T00:13:55.492537+00:00</updated>
    <content type="html">But worth a try anyway</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10329"/>
    <published>2025-07-23T19:13:20+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10328</id>
    <title>@honorary_bot on 2025-07-23 19:13:06+00:00 (#10328)</title>
    <updated>2025-07-26T00:13:55.492530+00:00</updated>
    <content type="html">Not sure if application verifier helps here</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10328"/>
    <published>2025-07-23T19:13:06+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10327</id>
    <title>@honorary_bot on 2025-07-23 19:12:55+00:00 (#10327)</title>
    <updated>2025-07-26T00:13:55.492523+00:00</updated>
    <content type="html">Oh, sorry, I missed that</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10327"/>
    <published>2025-07-23T19:12:55+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10326</id>
    <title>@HughEverett on 2025-07-23 19:12:41+00:00 (#10326)</title>
    <updated>2025-07-26T00:13:55.492479+00:00</updated>
    <content type="html">But this one is a user mode bug,  does it work with user mode too?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10326"/>
    <published>2025-07-23T19:12:41+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10325</id>
    <title>@honorary_bot on 2025-07-23 19:11:57+00:00 (#10325)</title>
    <updated>2025-07-26T00:13:55.492473+00:00</updated>
    <content type="html">Driver verifier would catch mem corruptions on the spot</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10325"/>
    <published>2025-07-23T19:11:57+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10324</id>
    <title>@HughEverett on 2025-07-23 19:11:57+00:00 (#10324)</title>
    <updated>2025-07-26T00:13:55.492468+00:00</updated>
    <content type="html">It's been a long time that we didn't use it</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10324"/>
    <published>2025-07-23T19:11:57+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10323</id>
    <title>@honorary_bot on 2025-07-23 19:11:31+00:00 (#10323)</title>
    <updated>2025-07-26T00:13:55.492461+00:00</updated>
    <content type="html">Do you use driver verifier btw?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10323"/>
    <published>2025-07-23T19:11:31+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10322</id>
    <title>@HughEverett on 2025-07-23 19:11:30+00:00 (#10322)</title>
    <updated>2025-07-26T00:13:55.492454+00:00</updated>
    <content type="html">We taught about heap corruption but honestly, this bug also triggered with a simple printf.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10322"/>
    <published>2025-07-23T19:11:30+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10321</id>
    <title>@honorary_bot on 2025-07-23 19:11:15+00:00 (#10321)</title>
    <updated>2025-07-26T00:13:55.492429+00:00</updated>
    <content type="html">Maybe more like a race condition, since it is a public external variable</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10321"/>
    <published>2025-07-23T19:11:15+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10320</id>
    <title>@HughEverett on 2025-07-23 19:10:47+00:00 (#10320)</title>
    <updated>2025-07-26T00:13:55.492423+00:00</updated>
    <content type="html">Like what? Heap corruption? 🤔</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10320"/>
    <published>2025-07-23T19:10:47+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10319</id>
    <title>@honorary_bot on 2025-07-23 19:09:02+00:00 (#10319)</title>
    <updated>2025-07-26T00:13:55.492417+00:00</updated>
    <content type="html">There must be something else</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10319"/>
    <published>2025-07-23T19:09:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10318</id>
    <title>@honorary_bot on 2025-07-23 19:08:50+00:00 (#10318)</title>
    <updated>2025-07-26T00:13:55.492410+00:00</updated>
    <content type="html">Symbol mapping may be inaccurate in release builds</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10318"/>
    <published>2025-07-23T19:08:50+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10317</id>
    <title>@honorary_bot on 2025-07-23 19:07:28+00:00 (#10317)</title>
    <updated>2025-07-26T00:13:55.492335+00:00</updated>
    <content type="html">Hey man, I checked the generated asm and I don't see any optimization bugs here:</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10317"/>
    <link href="https://tg-archive.hyperdbg.org/media/10317.jpg"/>
    <published>2025-07-23T19:07:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10316</id>
    <title>@HughEverett on 2025-07-23 18:26:34+00:00 (#10316)</title>
    <updated>2025-07-26T00:13:55.492329+00:00</updated>
    <content type="html">That's a good idea, but for us, we always need to have the latest version of VS since we have to discover and fix these kinds of issues before HyperDbg users encounter them. Other than that, for the release of HyperDbg, binaries we use GitHub actions. They usually have the updated version.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10316"/>
    <published>2025-07-23T18:26:34+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10315</id>
    <title>@HyperDbgBot on 2025-07-23 18:13:20+00:00 (#10315)</title>
    <updated>2025-07-26T00:13:55.492324+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: me always having visual studio open so it never updates looks like it saved me from these versions.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10315"/>
    <published>2025-07-23T18:13:20+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10314</id>
    <title>@honorary_bot on 2025-07-23 17:08:20+00:00 (#10314)</title>
    <updated>2025-07-26T00:13:55.492319+00:00</updated>
    <content type="html">Done</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10314"/>
    <published>2025-07-23T17:08:20+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10313</id>
    <title>@HughEverett on 2025-07-23 17:08:13+00:00 (#10313)</title>
    <updated>2025-07-26T00:13:55.492313+00:00</updated>
    <content type="html">Make sure to download it, I'll remove it in a bit to avoid adding a file in the group archive.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10313"/>
    <published>2025-07-23T17:08:13+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10311</id>
    <title>@HughEverett on 2025-07-23 17:07:09+00:00 (#10311)</title>
    <updated>2025-07-26T00:13:55.492308+00:00</updated>
    <content type="html">It is an example of the HyperDbg with this error:</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10311"/>
    <published>2025-07-23T17:07:09+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10310</id>
    <title>@honorary_bot on 2025-07-23 17:05:21+00:00 (#10310)</title>
    <updated>2025-07-26T00:13:55.492303+00:00</updated>
    <content type="html">Is there a binary available? I don't have a set up for building rn. Don't worry if it's too tedious to get one</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10310"/>
    <published>2025-07-23T17:05:21+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10309</id>
    <title>@HughEverett on 2025-07-23 17:03:30+00:00 (#10309)</title>
    <updated>2025-07-26T00:13:55.492298+00:00</updated>
    <content type="html">Then loading HyperDbg, gives a very basic C compiler error.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10309"/>
    <published>2025-07-23T17:03:30+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10308</id>
    <title>@HughEverett on 2025-07-23 17:03:03+00:00 (#10308)</title>
    <updated>2025-07-26T00:13:55.492293+00:00</updated>
    <content type="html">And build it in the 'release' mode.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10308"/>
    <published>2025-07-23T17:03:03+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10307</id>
    <title>@HughEverett on 2025-07-23 17:02:48+00:00 (#10307)</title>
    <updated>2025-07-26T00:13:55.492283+00:00</updated>
    <content type="html">But to reproduce it, you can simply git checkout to this commit:
https://github.com/HyperDbg/HyperDbg/commit/9dbfebd5b00f47a19894c971a15d5418abc8521f</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10307"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/commit/9dbfebd5b00f47a19894c971a15d5418abc8521f"/>
    <published>2025-07-23T17:02:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10306</id>
    <title>@HughEverett on 2025-07-23 17:01:59+00:00 (#10306)</title>
    <updated>2025-07-26T00:13:55.492275+00:00</updated>
    <content type="html">I didn't check the ASM.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10306"/>
    <published>2025-07-23T17:01:59+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10305</id>
    <title>@honorary_bot on 2025-07-23 17:01:28+00:00 (#10305)</title>
    <updated>2025-07-26T00:13:55.492268+00:00</updated>
    <content type="html">What asm does it produce? Still can't find bug details</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10305"/>
    <published>2025-07-23T17:01:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10304</id>
    <title>@honorary_bot on 2025-07-23 17:00:17+00:00 (#10304)</title>
    <updated>2025-07-26T00:13:55.492262+00:00</updated>
    <content type="html">But that's effed up, for real</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10304"/>
    <published>2025-07-23T17:00:17+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10303</id>
    <title>@HughEverett on 2025-07-23 17:00:04+00:00 (#10303)</title>
    <updated>2025-07-26T00:13:55.492256+00:00</updated>
    <content type="html">It's like very basic C statement that fails. It seems that others also encountered this issue:
https://x.com/rpcs3/status/1946069204282565100</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10303"/>
    <published>2025-07-23T17:00:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10302</id>
    <title>@honorary_bot on 2025-07-23 16:59:59+00:00 (#10302)</title>
    <updated>2025-07-26T00:13:55.492249+00:00</updated>
    <content type="html">Hehe, I'm lucky that I skip major MSVS versions</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10302"/>
    <published>2025-07-23T16:59:59+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10301</id>
    <title>@HughEverett on 2025-07-23 16:59:03+00:00 (#10301)</title>
    <updated>2025-07-26T00:13:55.492240+00:00</updated>
    <content type="html">I even print the 'g_DeviceHandle' as an unsigned integer inside this 'if' statement and it shows 0, while the if statement is still triggered.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10301"/>
    <published>2025-07-23T16:59:03+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10300</id>
    <title>@HughEverett on 2025-07-23 16:57:51+00:00 (#10300)</title>
    <updated>2025-07-26T00:13:55.492134+00:00</updated>
    <content type="html">On Visual Studio 17.14.8 and 17.14.9 (Latest) if you use the user-mode optimization for 'libhyperdbg.dll', for this simple line of code, even though g_DeviceHandle is null, still it goes through the 'if' statement. Even initializing this variable doesn't help.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10300"/>
    <link href="https://tg-archive.hyperdbg.org/media/10300.jpg"/>
    <published>2025-07-23T16:57:51+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10299</id>
    <title>@honorary_bot on 2025-07-23 16:54:22+00:00 (#10299)</title>
    <updated>2025-07-26T00:13:55.492127+00:00</updated>
    <content type="html">Which one exactly?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10299"/>
    <published>2025-07-23T16:54:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10298</id>
    <title>@HughEverett on 2025-07-23 16:53:38+00:00 (#10298)</title>
    <updated>2025-07-26T00:13:55.492120+00:00</updated>
    <content type="html">I see simple 'if' 'else' compiler bugs dues to the MSVC optimizations on HyperDbg.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10298"/>
    <published>2025-07-23T16:53:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10297</id>
    <title>@HughEverett on 2025-07-23 16:52:58+00:00 (#10297)</title>
    <updated>2025-07-26T00:13:55.492105+00:00</updated>
    <content type="html">This one was crazy: 
https://x.com/0Xiphorus/status/1948062027156426947</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10297"/>
    <published>2025-07-23T16:52:58+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10296</id>
    <title>@HyperDbgChannel on 2025-07-23 10:50:38+00:00 (#10296)</title>
    <updated>2025-07-26T00:13:55.491607+00:00</updated>
    <content type="html">I'm happy to announce that @HyperDbg v0.14 is released! 

This version includes HyperEvade (beta preview), fixes Win11 24H2 compatibility issues &amp; adds multiple timing functions to the script engine (Special thanks to Bjorn and all contributors).

Check it out: https://github.com/HyperDbg/HyperDbg/releases/tag/v0.14 
 
More info on HyperEvade: https://github.com/HyperDbg/slides/blob/main/2025/DEBT2025/hyperevade-ecoop2025-debt.pdf 

Microsleep function:
https://docs.hyperdbg.org/commands/scripting-language/functions/timings/microsleep

and RDTSC/RDTSCP:
https://docs.hyperdbg.org/commands/scripting-language/functions/timings/rdtsc

https://docs.hyperdbg.org/commands/scripting-language/functions/timings/rdtscp

Thanks to Tara for making this painting for us (it's not AI-generated).</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10296"/>
    <link href="https://tg-archive.hyperdbg.org/media/10296.jpg"/>
    <published>2025-07-23T10:50:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10295</id>
    <title>@Esteral7 on 2025-07-23 07:31:34+00:00 (#10295)</title>
    <updated>2025-07-26T00:13:55.491600+00:00</updated>
    <content type="html">Hey guys</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10295"/>
    <published>2025-07-23T07:31:34+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10294</id>
    <title>@Esteral7 on 2025-07-22 20:40:21+00:00 (#10294)</title>
    <updated>2025-07-26T00:13:55.491593+00:00</updated>
    <content type="html"/>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10294"/>
    <published>2025-07-22T20:40:21+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10293</id>
    <title>@7828427383 on 2025-07-22 16:57:26+00:00 (#10293)</title>
    <updated>2025-07-26T00:13:55.491585+00:00</updated>
    <content type="html"/>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10293"/>
    <published>2025-07-22T16:57:26+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10292</id>
    <title>@honorary_bot on 2025-07-22 02:14:10+00:00 (#10292)</title>
    <updated>2025-07-26T00:13:55.491579+00:00</updated>
    <content type="html">Generally it’s a performance loss. I’ve known couple of devices that might machine check, but it would be considered as errata.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10292"/>
    <published>2025-07-22T02:14:10+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10291</id>
    <title>@HughEverett on 2025-07-22 02:12:00+00:00 (#10291)</title>
    <updated>2025-07-26T00:13:55.491573+00:00</updated>
    <content type="html">Thanks for adding these information. Just curious to know, what will happen if we set all of the out of range (above 512GB) memory to Uncacheable? Is it just about the performance or will it have any impact on the target device which might cause a crash?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10291"/>
    <published>2025-07-22T02:12:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10290</id>
    <title>@HughEverett on 2025-07-22 02:09:24+00:00 (#10290)</title>
    <updated>2025-07-26T00:13:55.491565+00:00</updated>
    <content type="html">Yes, but the only caveat is that we are consuming 2MBs of memory by using this approach which I think it's acceptable.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10290"/>
    <published>2025-07-22T02:09:24+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10289</id>
    <title>@honorary_bot on 2025-07-22 02:06:01+00:00 (#10289)</title>
    <updated>2025-07-26T00:13:55.491557+00:00</updated>
    <content type="html">The ideal version of EPT coverage is using 4kb pages for known device mmio and large/huge pages for unused physical address space to save memory for EPT page tables.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10289"/>
    <published>2025-07-22T02:06:01+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10288</id>
    <title>@honorary_bot on 2025-07-22 02:01:52+00:00 (#10288)</title>
    <updated>2025-07-26T00:13:55.491549+00:00</updated>
    <content type="html">This is a bit complicated. Devices might use cached memory for mmio sometimes, but MTRRs should help you with initial caching hint. The other problem I totally forgot to mention is you probably want to use 4kb EPT pages for mmio. It may not work otherwise. Sorry, I completely forgot to mention that.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10288"/>
    <published>2025-07-22T02:01:52+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10287</id>
    <title>@HyperDbgBot on 2025-07-22 01:57:51+00:00 (#10287)</title>
    <updated>2025-07-26T00:13:55.491541+00:00</updated>
    <content type="html">[discord] &lt;unrustled.jimmies&gt; [reply]: Thanks for adding the change. 

This way is more efficient since it avoids the ept violation + invept in the first place. As for creating the 511 * 512 block of PML3s instead of reusing the same page, its only 2mb - 4kb, shouldn't really matter. 

As for `PML3TemplateLarge.MemoryType    = MEMORY_TYPE_UNCACHEABLE;`, can some devices use a different memory type? eg GPU using WC for their frame buffer mmio address.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10287"/>
    <published>2025-07-22T01:57:51+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10286</id>
    <title>@HyperDbgBot on 2025-07-21 23:30:04+00:00 (#10286)</title>
    <updated>2025-07-26T00:13:55.491532+00:00</updated>
    <content type="html">[discord] &lt;rayanfam&gt; If you have a better (more efficient) implementation, feel free to change it.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10286"/>
    <published>2025-07-21T23:30:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10285</id>
    <title>@HyperDbgBot on 2025-07-21 23:29:39+00:00 (#10285)</title>
    <updated>2025-07-26T00:13:55.491519+00:00</updated>
    <content type="html">[discord] &lt;rayanfam&gt; https://github.com/HyperDbg/HyperDbg/pull/533</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10285"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://github.com/HyperDbg/HyperDbg/pull/533"/>
    <published>2025-07-21T23:29:39+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10284</id>
    <title>@HyperDbgBot on 2025-07-21 23:29:38+00:00 (#10284)</title>
    <updated>2025-07-26T00:13:55.491513+00:00</updated>
    <content type="html">[discord] &lt;rayanfam&gt; [reply]: I added the support for the addresses above 512 GB to HyperDbg:</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10284"/>
    <published>2025-07-21T23:29:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10283</id>
    <title>@honorary_bot on 2025-07-19 20:53:24+00:00 (#10283)</title>
    <updated>2025-07-26T00:13:55.491505+00:00</updated>
    <content type="html">No problem!</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10283"/>
    <published>2025-07-19T20:53:24+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10282</id>
    <title>@HughEverett on 2025-07-19 20:53:17+00:00 (#10282)</title>
    <updated>2025-07-26T00:13:55.491498+00:00</updated>
    <content type="html">Thanks</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10282"/>
    <published>2025-07-19T20:53:17+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10281</id>
    <title>@HughEverett on 2025-07-19 20:53:12+00:00 (#10281)</title>
    <updated>2025-07-26T00:13:55.491490+00:00</updated>
    <content type="html">I think I got it.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10281"/>
    <published>2025-07-19T20:53:12+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10280</id>
    <title>@HughEverett on 2025-07-19 20:52:01+00:00 (#10280)</title>
    <updated>2025-07-26T00:13:55.491479+00:00</updated>
    <content type="html">Yes, exactly.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10280"/>
    <published>2025-07-19T20:52:01+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10279</id>
    <title>@honorary_bot on 2025-07-19 20:51:39+00:00 (#10279)</title>
    <updated>2025-07-26T00:13:55.491216+00:00</updated>
    <content type="html">This is by the way how you set ECAM base address</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10279"/>
    <link href="https://tg-archive.hyperdbg.org/media/10279.jpg"/>
    <published>2025-07-19T20:51:39+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10278</id>
    <title>@honorary_bot on 2025-07-19 20:50:29+00:00 (#10278)</title>
    <updated>2025-07-26T00:13:55.491184+00:00</updated>
    <content type="html">Those are initialized and locked in firmware (cpudxe)</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10278"/>
    <published>2025-07-19T20:50:29+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10277</id>
    <title>@honorary_bot on 2025-07-19 20:50:04+00:00 (#10277)</title>
    <updated>2025-07-26T00:13:55.488816+00:00</updated>
    <content type="html">Even the system reserved address ranges are configurable:</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10277"/>
    <link href="https://tg-archive.hyperdbg.org/media/10277.jpg"/>
    <published>2025-07-19T20:50:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10276</id>
    <title>@honorary_bot on 2025-07-19 20:47:40+00:00 (#10276)</title>
    <updated>2025-07-26T00:13:55.488810+00:00</updated>
    <content type="html">PCI headers reside in ECAM, BARs reside in PCI headers, point to any DMI-decode system address</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10276"/>
    <published>2025-07-19T20:47:40+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10275</id>
    <title>@HughEverett on 2025-07-19 20:45:48+00:00 (#10275)</title>
    <updated>2025-07-26T00:13:55.488803+00:00</updated>
    <content type="html">Not sure if I understand it. PCIe BARs are configured through PCIe CAM or ECAM. Isn't it like this?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10275"/>
    <published>2025-07-19T20:45:48+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10274</id>
    <title>@honorary_bot on 2025-07-19 20:45:04+00:00 (#10274)</title>
    <updated>2025-07-26T00:13:55.488796+00:00</updated>
    <content type="html">No, PCI BARs</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10274"/>
    <published>2025-07-19T20:45:04+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10273</id>
    <title>@HughEverett on 2025-07-19 20:45:02+00:00 (#10273)</title>
    <updated>2025-07-26T00:13:55.488789+00:00</updated>
    <content type="html">Got it</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10273"/>
    <published>2025-07-19T20:45:02+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10272</id>
    <title>@HughEverett on 2025-07-19 20:44:57+00:00 (#10272)</title>
    <updated>2025-07-26T00:13:55.488782+00:00</updated>
    <content type="html">or ECAM</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10272"/>
    <published>2025-07-19T20:44:57+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10271</id>
    <title>@HughEverett on 2025-07-19 20:44:52+00:00 (#10271)</title>
    <updated>2025-07-26T00:13:55.488775+00:00</updated>
    <content type="html">Ah, you mean through PCI CAM</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10271"/>
    <published>2025-07-19T20:44:52+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10270</id>
    <title>@honorary_bot on 2025-07-19 20:44:00+00:00 (#10270)</title>
    <updated>2025-07-26T00:13:55.488767+00:00</updated>
    <content type="html">PCI bridge resource regions as well</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10270"/>
    <published>2025-07-19T20:44:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10269</id>
    <title>@honorary_bot on 2025-07-19 20:43:47+00:00 (#10269)</title>
    <updated>2025-07-26T00:13:55.488761+00:00</updated>
    <content type="html">PCI BARs</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10269"/>
    <published>2025-07-19T20:43:47+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10268</id>
    <title>@HughEverett on 2025-07-19 20:43:28+00:00 (#10268)</title>
    <updated>2025-07-26T00:13:55.488754+00:00</updated>
    <content type="html">Just curious to know, how? The only way that I know is through VT-d. What do they change to reorder these PCIe resources? 🤔</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10268"/>
    <published>2025-07-19T20:43:28+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10267</id>
    <title>@honorary_bot on 2025-07-19 20:42:55+00:00 (#10267)</title>
    <updated>2025-07-26T00:13:55.488748+00:00</updated>
    <content type="html">It is debatable which approach is better. Linux doesn't trust the firmware and tried to follow the PCI spec. Windows trusts the firmware, and firmware does whatever it needs to do for the platform to perform better - PCI here is just a high level abstraction for lower level platform protocols and buses, so it is up to a vendor to decide what is better for the platform.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10267"/>
    <published>2025-07-19T20:42:55+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10266</id>
    <title>@honorary_bot on 2025-07-19 20:40:36+00:00 (#10266)</title>
    <updated>2025-07-26T00:13:55.488741+00:00</updated>
    <content type="html">Interestingly, Linux reorders PCI resources to make MMIO ranges compact. So Linux BAR mappings are likely to be always different compared to what the firmware set up</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10266"/>
    <published>2025-07-19T20:40:36+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10265</id>
    <title>@HughEverett on 2025-07-19 20:39:42+00:00 (#10265)</title>
    <updated>2025-07-26T00:13:55.488735+00:00</updated>
    <content type="html">👍</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10265"/>
    <published>2025-07-19T20:39:42+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10264</id>
    <title>@honorary_bot on 2025-07-19 20:39:39+00:00 (#10264)</title>
    <updated>2025-07-26T00:13:55.488728+00:00</updated>
    <content type="html">from CPU*</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10264"/>
    <published>2025-07-19T20:39:39+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10263</id>
    <title>@honorary_bot on 2025-07-19 20:39:27+00:00 (#10263)</title>
    <updated>2025-07-26T00:13:55.488721+00:00</updated>
    <content type="html">It will, what I'm saying is you can't manually craft TLP packet with system address or something</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10263"/>
    <published>2025-07-19T20:39:27+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10262</id>
    <title>@HughEverett on 2025-07-19 20:38:56+00:00 (#10262)</title>
    <updated>2025-07-26T00:13:55.488714+00:00</updated>
    <content type="html">Well, isn't like this that writing into certain MMIO regions (PCIe BARs) will cause the CPU's PCIe root complex to create TLP packet for the endpoint devices? 🤔</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10262"/>
    <published>2025-07-19T20:38:56+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10261</id>
    <title>@honorary_bot on 2025-07-19 20:38:51+00:00 (#10261)</title>
    <updated>2025-07-26T00:13:55.488706+00:00</updated>
    <content type="html">In fact I usually disable it because I don't want to emultate VTd device, while I still need it for transport drivers</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10261"/>
    <published>2025-07-19T20:38:51+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10260</id>
    <title>@honorary_bot on 2025-07-19 20:37:23+00:00 (#10260)</title>
    <updated>2025-07-26T00:13:55.488699+00:00</updated>
    <content type="html">Let's skip VTd here for simplicity as well</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10260"/>
    <published>2025-07-19T20:37:23+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10259</id>
    <title>@honorary_bot on 2025-07-19 20:37:00+00:00 (#10259)</title>
    <updated>2025-07-26T00:13:55.488691+00:00</updated>
    <content type="html">Also, what you described also doesn't cover the case when the firmware decided to map BARs to a farfaraway system address and Windows driver would use it later on</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10259"/>
    <published>2025-07-19T20:37:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10258</id>
    <title>@honorary_bot on 2025-07-19 20:36:09+00:00 (#10258)</title>
    <updated>2025-07-26T00:13:55.488683+00:00</updated>
    <content type="html">Think of PCI BARs - you can literally set any system address there, it is designed to be that way.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10258"/>
    <published>2025-07-19T20:36:09+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10257</id>
    <title>@honorary_bot on 2025-07-19 20:35:41+00:00 (#10257)</title>
    <updated>2025-07-26T00:13:55.488676+00:00</updated>
    <content type="html">There is no point thinking about TLPs because it is not programmable from the CPU anyway.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10257"/>
    <published>2025-07-19T20:35:41+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10256</id>
    <title>@HughEverett on 2025-07-19 20:35:22+00:00 (#10256)</title>
    <updated>2025-07-26T00:13:55.488668+00:00</updated>
    <content type="html">Interesting. I didn't realize it's because of that. 👍</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10256"/>
    <published>2025-07-19T20:35:22+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10255</id>
    <title>@HughEverett on 2025-07-19 20:33:42+00:00 (#10255)</title>
    <updated>2025-07-26T00:13:55.488646+00:00</updated>
    <content type="html">Well, I think it breaks some of my assumptions.

This is my understanding:
The device driver could only query for certain physical addresses of the target device. What they could do is map these far far away physical addresses to virtual addresses and then access the virtual address.

They could NOT re-map the physical address (MMIO address themselves), the only one who could do this is either Windows or UEFI Firmware by using Intel VT-d tables (is there any other way?)

Right now, we have the read/write into physical memory using !eb or !db commands:
https://docs.hyperdbg.org/commands/extension-commands/e

These commands check the validity of the address before writing into it. The way that we check it is by using the function I posted above.

Now, the problem is, assuming someone wants to create a TLP packet for a PCIe device by using '!eb' function and writing into the physical address (MMIO Address). If we check it with the above function, it says that the address is invalid; however, the address is a valid MMIO physical address, which we incorrectly avoid writing to it since our validity function says it's not valid.

Now the question is, how we should check whether the physical address is valid or not?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10255"/>
    <link href="https://tg-archive.hyperdbg.org/media/https://docs.hyperdbg.org/commands/extension-commands/e"/>
    <published>2025-07-19T20:33:42+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10254</id>
    <title>@honorary_bot on 2025-07-19 20:31:33+00:00 (#10254)</title>
    <updated>2025-07-26T00:13:55.488639+00:00</updated>
    <content type="html">I know, many vendors try to keep system address space compact. But it is not a must, you can place your MMIO regions almost anywhere you want.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10254"/>
    <published>2025-07-19T20:31:33+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10253</id>
    <title>@honorary_bot on 2025-07-19 20:29:54+00:00 (#10253)</title>
    <updated>2025-07-26T00:13:55.488631+00:00</updated>
    <content type="html">I know it's rather big, but this is the exact reason why large and huge EPT pages exist.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10253"/>
    <published>2025-07-19T20:29:54+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10252</id>
    <title>@honorary_bot on 2025-07-19 20:29:27+00:00 (#10252)</title>
    <updated>2025-07-26T00:13:55.488622+00:00</updated>
    <content type="html">This is why you should map the whole guest physical address space in EPT.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10252"/>
    <published>2025-07-19T20:29:27+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10251</id>
    <title>@honorary_bot on 2025-07-19 20:29:00+00:00 (#10251)</title>
    <updated>2025-07-26T00:13:55.488608+00:00</updated>
    <content type="html">So whenever some driver needs to communicate with the device, it tries to access a virtual address for that MMIO ranges. MMU translates it to a far-far away physical address. And then it fails, because it's virtualized and EPT has no entry for that guest physical address.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10251"/>
    <published>2025-07-19T20:29:00+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10250</id>
    <title>@honorary_bot on 2025-07-19 20:26:38+00:00 (#10250)</title>
    <updated>2025-07-26T00:13:55.488551+00:00</updated>
    <content type="html">Respective drivers map those system addresses to kernel virtual ones in order to be able to work with the device MMIO region.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10250"/>
    <published>2025-07-19T20:26:38+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10249</id>
    <title>@honorary_bot on 2025-07-19 20:26:03+00:00 (#10249)</title>
    <updated>2025-07-26T00:13:55.488541+00:00</updated>
    <content type="html">Windows boots later on and recevies resources lists, including system addresses for MMIO ranges for devices.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10249"/>
    <published>2025-07-19T20:26:03+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10248</id>
    <title>@honorary_bot on 2025-07-19 20:25:27+00:00 (#10248)</title>
    <updated>2025-07-26T00:13:55.488529+00:00</updated>
    <content type="html">I guess I need to disambiguate the term 'maps' here. Frimware sets up system address space layout for devices given those devices have UEFI drivers or ACPI methods. There you have physical addresses of MMIO regions for the devices.</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10248"/>
    <published>2025-07-19T20:25:27+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10247</id>
    <title>@honorary_bot on 2025-07-19 20:21:57+00:00 (#10247)</title>
    <updated>2025-07-26T00:13:55.488511+00:00</updated>
    <content type="html">But the OS has device drivers. The driver maps MMIO, which is mapped to that far far away physical (system) address. OS driver tries to access MMIO -&gt; EPT violation</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10247"/>
    <published>2025-07-19T20:21:57+00:00</published>
  </entry>
  <entry>
    <id>https://tg-archive.hyperdbg.org/2025-07.html#10246</id>
    <title>@HughEverett on 2025-07-19 20:19:41+00:00 (#10246)</title>
    <updated>2025-07-26T00:13:55.488463+00:00</updated>
    <content type="html">OS? Isn't it the responsibility of UEFI firmware to map MMIO addresses to physical addresses?</content>
    <link href="https://tg-archive.hyperdbg.org/2025-07.html#10246"/>
    <published>2025-07-19T20:19:41+00:00</published>
  </entry>
</feed>
